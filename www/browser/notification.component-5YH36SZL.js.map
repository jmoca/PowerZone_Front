{
  "version": 3,
  "sources": ["src/app/Service/NotificationService.ts", "src/app/Screen/notification/notification.component.ts", "src/app/Screen/notification/notification.component.html"],
  "sourcesContent": ["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {MegaNotification} from \"../Models/MegaNotification\";\nimport {environment} from \"../../environments/environment.prod\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n    private apiUrl = environment.apiUrl + '/notification';\n    private token = sessionStorage.getItem('token');\n\n    constructor(private http: HttpClient) {\n    }\n\n    private getHeaders(): HttpHeaders {\n\n        return new HttpHeaders({\n            'Authorization': `Bearer ${this.token}`,\n        });\n    }\n\n    public getNotifications(): Observable<MegaNotification[]> {\n        return this.http.get<MegaNotification[]>(`${this.apiUrl}`, { headers: this.getHeaders() });\n    }\n}\n", "import {Component, OnInit} from '@angular/core';\r\nimport {IonicModule} from \"@ionic/angular\";\r\nimport {NotificationService} from \"../../Service/NotificationService\";\r\nimport {MegaNotification} from \"../../Models/MegaNotification\";\r\nimport {NgForOf, NgIf, NgSwitch, NgSwitchCase, NgSwitchDefault} from \"@angular/common\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-notification',\r\n    templateUrl: './notification.component.html',\r\n    styleUrls: ['./notification.component.scss'],\r\n    standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    NgSwitch,\r\n    NgSwitchCase,\r\n    NgSwitchDefault,\r\n    NgIf,\r\n    NgForOf\r\n  ]\r\n})\r\nexport class NotificationComponent  implements OnInit {\r\n    notifications: MegaNotification[] = [];\r\n    notificationsToday: MegaNotification[] = [];\r\n    notificationsYesterday: MegaNotification[] = [];\r\n    notificationsLast7Days: MegaNotification[] = [];\r\n    notificationsLast10Days: MegaNotification[] = [];\r\n\r\n    constructor(\r\n        private notificationService: NotificationService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.notificationService.getNotifications().subscribe({\r\n            next: (notifications) => {\r\n                this.notifications = notifications\r\n                this.groupNotifications()\r\n            },\r\n            error: (err) => console.error(err),\r\n            complete: () => console.log('complete')\r\n        })\r\n    }\r\n\r\n  groupNotifications(): void {\r\n    const today = new Date();\r\n\r\n    this.notifications.forEach(notif => {\r\n      // Convertir el string a Date; asegúrate que notif.date esté en un formato reconocible por el constructor de Date.\r\n      const notifDate = new Date(notif.date.toString());\r\n\r\n      // Calculamos la diferencia en milisegundos y luego la convertimos a días\r\n      const diffMs = today.getTime() - notifDate.getTime();\r\n      const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n      if (diffDays === 0) {\r\n        // Notificaciones de hoy\r\n        this.notificationsToday.push(notif);\r\n      } else if (diffDays === 1) {\r\n        // Notificaciones de ayer\r\n        this.notificationsYesterday.push(notif);\r\n      } else if (diffDays > 1 && diffDays <= 7) {\r\n        // Notificaciones de los últimos 7 días (excepto hoy y ayer)\r\n        this.notificationsLast7Days.push(notif);\r\n      } else if (diffDays > 7 && diffDays <= 10) {\r\n        // Notificaciones de los últimos 10 días\r\n        this.notificationsLast10Days.push(notif);\r\n      }\r\n      // Si necesitas agrupar notificaciones más antiguas, puedes agregar otro bloque.\r\n    });\r\n  }\r\n  goToNotification(notification: MegaNotification): void {\r\n      // Dependiendo del tipo de notificación, navega a una ruta distinta.\r\n      // Asegúrate de que las rutas existan en tu módulo de enrutamiento.\r\n      switch (notification.type) {\r\n        case 'MESSAGE':\r\n          // Por ejemplo, redirige a la conversación o mensaje\r\n          //TODO: Reemplazar 'notification.groupMessenger.grupouser.groupId' por la ruta correcta\r\n          this.router.navigate(['/messages', notification.groupMessenger.grupouser.groupId]);\r\n          break;\r\n        case 'NEW_POST':\r\n          // Redirige a la página de detalle del post\r\n          if (notification.postDto?.post?.id?.toString()) {\r\n            this.router.navigate(['/post-details/' + notification.postDto?.post?.id?.toString()]);\r\n          }\r\n          break;\r\n        case 'NEW_LIKE':\r\n          // Puede que también quieras dirigir al detalle del post\r\n          if (notification.postDto?.post?.id?.toString()) {\r\n            this.router.navigate(['/post-details/' + notification.postDto?.post?.id?.toString()]);\r\n          }\r\n          break;\r\n        case 'NEW_FOLLOWER':\r\n          // Redirige al perfil del emisor\r\n          if (notification.emitter.id) {\r\n            this.router.navigate(['/profile/' + notification.emitter.id]);\r\n          }\r\n          break;\r\n        case 'NEW_COMMENT':\r\n          // Redirige al detalle del post o a la sección de comentarios\r\n          if (notification.comment.postId) {\r\n            this.router.navigate(['/post-details/', notification.postDto?.post?.id?.toString()]);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n  }\r\n\r\n\r\n}\r\n", "<ion-content fullscreen>\r\n\r\n    <ion-grid class=\"ion-no-padding\">\r\n        <ion-toolbar class=\"movil\">\r\n            <ion-title class=\"header\">Notificaciones</ion-title>\r\n        </ion-toolbar>\r\n        <!-- Sección: Notificaciones de Hoy -->\r\n        <ng-container *ngIf=\"notificationsToday.length > 0\">\r\n            <ion-row class=\"section-header\">\r\n                <ion-col>\r\n                    <h2>Hoy</h2>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ng-container *ngFor=\"let notification of notificationsToday\">\r\n                <ion-row>\r\n                    <ion-col>\r\n                        <ion-item lines=\"none\" (click)=\"goToNotification(notification)\" class=\"notification-item\">\r\n                            <ion-avatar slot=\"start\">\r\n                                <img alt=\"avatar\" [src]=\"notification.emitter.avatar\"/>\r\n                            </ion-avatar>\r\n                            <ion-label class=\"notification-label\">\r\n                                <b>{{ notification.emitter.nickName }}</b>\r\n                                <span [ngSwitch]=\"notification.type\">\r\n                                    <span *ngSwitchCase=\"'MESSAGE'\"> te ha enviado un mensaje</span>\r\n                                    <span *ngSwitchCase=\"'NEW_POST'\"> ha publicado una nueva publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_LIKE'\"> le ha dado me gusta a tu publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_FOLLOWER'\"> te ha seguido</span>\r\n                                    <span *ngSwitchCase=\"'NEW_COMMENT'\"> ha comentado tu publicación</span>\r\n                                    <span *ngSwitchDefault> ha realizado una acción</span>\r\n                                </span>\r\n                            </ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                </ion-row>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Sección: Notificaciones de Ayer -->\r\n        <ng-container *ngIf=\"notificationsYesterday.length > 0\">\r\n            <ion-row class=\"section-header\">\r\n                <ion-col>\r\n                    <h2>Ayer</h2>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ng-container *ngFor=\"let notification of notificationsYesterday\">\r\n                <ion-row>\r\n                    <ion-col>\r\n                        <ion-item lines=\"none\" class=\"notification-item\">\r\n                            <ion-avatar slot=\"start\">\r\n                                <img alt=\"avatar\" [src]=\"notification.emitter.avatar\"/>\r\n                            </ion-avatar>\r\n                            <ion-label class=\"notification-label\">\r\n                                <b>{{ notification.emitter.nickName }}</b>\r\n                                <span [ngSwitch]=\"notification.type\">\r\n                                    <span *ngSwitchCase=\"'MESSAGE'\"> te ha enviado un mensaje</span>\r\n                                    <span *ngSwitchCase=\"'NEW_POST'\"> ha publicado una nueva publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_LIKE'\"> le ha dado me gusta a tu publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_FOLLOWER'\"> te ha seguido</span>\r\n                                    <span *ngSwitchCase=\"'NEW_COMMENT'\"> ha comentado tu publicación</span>\r\n                                    <span *ngSwitchDefault> ha realizado una acción</span>\r\n                                </span>\r\n                            </ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                </ion-row>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Sección: Notificaciones de los Últimos 7 días -->\r\n        <ng-container *ngIf=\"notificationsLast7Days.length > 0\">\r\n            <ion-row class=\"section-header\">\r\n                <ion-col>\r\n                    <h2>Últimos 7 días</h2>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ng-container *ngFor=\"let notification of notificationsLast7Days\">\r\n                <ion-row>\r\n                    <ion-col>\r\n                        <ion-item lines=\"none\" class=\"notification-item\">\r\n                            <ion-avatar slot=\"start\">\r\n                                <img alt=\"avatar\" [src]=\"notification.emitter.avatar\"/>\r\n                            </ion-avatar>\r\n                            <ion-label class=\"notification-label\">\r\n                                <b>{{ notification.emitter.nickName }}</b>\r\n                                <span [ngSwitch]=\"notification.type\">\r\n                                    <span *ngSwitchCase=\"'MESSAGE'\"> te ha enviado un mensaje</span>\r\n                                    <span *ngSwitchCase=\"'NEW_POST'\"> ha publicado una nueva publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_LIKE'\"> le ha dado me gusta a tu publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_FOLLOWER'\"> te ha seguido</span>\r\n                                    <span *ngSwitchCase=\"'NEW_COMMENT'\"> ha comentado tu publicación</span>\r\n                                    <span *ngSwitchDefault> ha realizado una acción</span>\r\n                                </span>\r\n                            </ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                </ion-row>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Sección: Notificaciones de los Últimos 10 días -->\r\n        <ng-container *ngIf=\"notificationsLast10Days.length > 0\">\r\n            <ion-row class=\"section-header\">\r\n                <ion-col>\r\n                    <h2>Últimos 10 días</h2>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ng-container *ngFor=\"let notification of notificationsLast10Days\">\r\n                <ion-row>\r\n                    <ion-col>\r\n                        <ion-item lines=\"none\" class=\"notification-item\">\r\n                            <ion-avatar slot=\"start\">\r\n                                <img alt=\"avatar\" [src]=\"notification.emitter.avatar\"/>\r\n                            </ion-avatar>\r\n                            <ion-label class=\"notification-label\">\r\n                                <b>{{ notification.emitter.nickName }}</b>\r\n                                <span [ngSwitch]=\"notification.type\">\r\n                                    <span *ngSwitchCase=\"'MESSAGE'\"> te ha enviado un mensaje</span>\r\n                                    <span *ngSwitchCase=\"'NEW_POST'\"> ha publicado una nueva publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_LIKE'\"> le ha dado me gusta a tu publicación</span>\r\n                                    <span *ngSwitchCase=\"'NEW_FOLLOWER'\"> te ha seguido</span>\r\n                                    <span *ngSwitchCase=\"'NEW_COMMENT'\"> ha comentado tu publicación</span>\r\n                                    <span *ngSwitchDefault> ha realizado una acción</span>\r\n                                </span>\r\n                            </ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                </ion-row>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n    </ion-grid>\r\n</ion-content>\r\n"],
  "mappings": "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",
  "names": []
}
