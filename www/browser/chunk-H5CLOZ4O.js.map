{"version":3,"sources":["src/app/Service/websocket.service.ts","node_modules/@cloudinary/url-gen/config/BaseConfig.js","node_modules/@cloudinary/url-gen/internal/internalConstants.js","node_modules/@cloudinary/url-gen/config/URLConfig.js","node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/QualifierValue.js","node_modules/@cloudinary/transformation-builder-sdk/internal/utils/unsupportedError.js","node_modules/@cloudinary/transformation-builder-sdk/internal/models/qualifierToJson.js","node_modules/@cloudinary/transformation-builder-sdk/internal/models/QualifierModel.js","node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/Qualifier.js","node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag/FlagQualifier.js","node_modules/@cloudinary/transformation-builder-sdk/internal/utils/dataStructureUtils.js","node_modules/@cloudinary/transformation-builder-sdk/internal/models/actionToJson.js","node_modules/@cloudinary/transformation-builder-sdk/internal/models/ActionModel.js","node_modules/@cloudinary/transformation-builder-sdk/internal/Action.js","node_modules/@cloudinary/transformation-builder-sdk/internal/utils/prepareColor.js","node_modules/@cloudinary/transformation-builder-sdk/actions/background/actions/BackgroundColor.js","node_modules/@cloudinary/transformation-builder-sdk/internal/RawAction.js","node_modules/@cloudinary/transformation-builder-sdk/internal/models/IErrorObject.js","node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag.js","node_modules/@cloudinary/transformation-builder-sdk/qualifiers/format/FormatQualifier.js","node_modules/@cloudinary/transformation-builder-sdk/internal/utils/objectFlip.js","node_modules/@cloudinary/transformation-builder-sdk/internal/internalConstants.js","node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryAction.js","node_modules/@cloudinary/transformation-builder-sdk/qualifiers/progressive.js","node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js","node_modules/@cloudinary/transformation-builder-sdk/transformation/Transformation.js","node_modules/@cloudinary/transformation-builder-sdk/transformation/ImageTransformation.js","node_modules/@cloudinary/transformation-builder-sdk/transformation/VideoTransformation.js","node_modules/@cloudinary/transformation-builder-sdk/actions/namedTransformation/NamedTransformationAction.js","node_modules/@cloudinary/transformation-builder-sdk/actions/namedTransformation.js","node_modules/@cloudinary/url-gen/internal/url/urlUtils/isUrl.js","node_modules/@cloudinary/url-gen/internal/url/urlUtils/isFileName.js","node_modules/@cloudinary/url-gen/internal/url/urlUtils/publicIDContainsVersion.js","node_modules/@cloudinary/url-gen/internal/url/cloudinaryURL.js","node_modules/@cloudinary/url-gen/sdkAnalytics/stringPad.js","node_modules/@cloudinary/url-gen/sdkAnalytics/base64Map.js","node_modules/@cloudinary/url-gen/sdkAnalytics/reverseVersion.js","node_modules/@cloudinary/url-gen/sdkAnalytics/padVersion.js","node_modules/@cloudinary/url-gen/sdkAnalytics/encodeVersion.js","node_modules/@cloudinary/url-gen/sdkAnalytics/getAnalyticsOptions.js","node_modules/@cloudinary/url-gen/internal/utils/packageVersion.js","node_modules/@cloudinary/url-gen/sdkAnalytics/encodeOSVersion.js","node_modules/@cloudinary/url-gen/sdkAnalytics/getSDKAnalyticsSignature.js","node_modules/@cloudinary/url-gen/assets/CloudinaryFile.js","node_modules/@cloudinary/url-gen/assets/CloudinaryTransformable.js","node_modules/@cloudinary/url-gen/assets/CloudinaryImage.js","node_modules/@cloudinary/url-gen/assets/CloudinaryVideo.js","node_modules/@cloudinary/url-gen/instance/Cloudinary.js","src/app/Service/Cloudinary.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Client} from '@stomp/stompjs';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {ChatMessage} from '../Models/ChatMessage';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment.prod\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class WebsocketService {\r\n    private stompClient!: Client;\r\n    private messageSubject: BehaviorSubject<ChatMessage[]> = new BehaviorSubject<ChatMessage[]>([]); // Lista de mensajes\r\n\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Método para conectarse al WebSocket\r\n    connect(roomId: string) {\r\n        const webSocketUrl = environment.apiUrl + `/ws-native`; // URL del servidor WebSocket nativo\r\n        this.stompClient = new Client({\r\n            webSocketFactory: () => new WebSocket(webSocketUrl),\r\n            reconnectDelay: 5000,\r\n            debug: (str) => console.log(str),\r\n            onConnect: () => {\r\n                console.log('Conectado al servidor WebSocket nativo');\r\n                this.stompClient.subscribe(`/topic/messages/${roomId}`, (message) => {\r\n                    try {\r\n                        const chatMessage: ChatMessage = JSON.parse(message.body);\r\n                        const currentMessages = this.messageSubject.getValue(); // Obtener los mensajes actuales\r\n                        this.messageSubject.next([chatMessage]); // Emitir nuevos mensajes\r\n                    } catch (error) {\r\n                        console.error('Error al procesar el mensaje recibido:', error);\r\n                    }\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('Error en WebSocket: ', frame.headers['message']);\r\n            },\r\n        });\r\n\r\n        this.stompClient.activate();\r\n    }\r\n\r\n    newSubscription(roomId: string) {\r\n\r\n    }\r\n\r\n    // Método para enviar mensajes\r\n    sendMessage(chatMessage: ChatMessage) {\r\n        if (this.stompClient && this.stompClient.connected) {\r\n            const message = JSON.stringify(chatMessage);\r\n            this.stompClient.publish({\r\n                destination: `/app/chat/${chatMessage.groupId}`,\r\n                body: message,\r\n            });\r\n        } else {\r\n            console.error('No se puede enviar el mensaje: WebSocket no está conectado.');\r\n        }\r\n    }\r\n\r\n    // Obtener mensajes de un grupo\r\n    getMessageObservable(): Observable<ChatMessage[]> {\r\n        return this.messageSubject.asObservable();\r\n    }\r\n\r\n    // Obtener los detalles de un grupo\r\n    getGroupDetails(groupId: number): Observable<any> {\r\n        const url = environment.apiUrl + `/messages/grupos/${groupId}`; // Llamamos al endpoint que devuelve la información del grupo\r\n        const token = sessionStorage.getItem('token'); // Obtén el token del almacenamiento de sesión\r\n        const headers = { Authorization: `Bearer ${token}` }; // Incluye el token en los headers\r\n        return this.http.get<any>(url, { headers }); // Llama al endpoint del backend\r\n    }\r\n\r\n    // Método para obtener los grupos del usuario\r\n    getUserGroups(): Observable<any> {\r\n        const url = environment.apiUrl + `/messages/info`; // URL del endpoint en el backend\r\n        const token = sessionStorage.getItem('token');\r\n        console.log('Token obtenido:', token); // Muestra el token en la consola\r\n        const headers = { Authorization: `Bearer ${token}` }; // Añade el token del usuario\r\n        return this.http.get<any>(url, { headers });\r\n    }\r\n\r\n    // Método para obtener los perfiles seguidos\r\n    getFollowingProfiles(): Observable<any> {\r\n        const url = environment.apiUrl + `/profile/following`; // URL del endpoint para obtener los perfiles seguidos\r\n        const token = sessionStorage.getItem('token'); // Obtiene el token de la sessionStorage\r\n        if (!token) {\r\n            return new Observable(observer => {\r\n                observer.error('Token no encontrado');\r\n            });\r\n        }\r\n        console.log('Token obtenido:', token); // Muestra el token en la consola\r\n        const headers = { Authorization: `Bearer ${token}` }; // Añade el token del usuario\r\n\r\n        return this.http.get<any>(url, { headers }); // Llama al endpoint del backend\r\n    }\r\n\r\n    // Crear un nuevo grupo\r\n    createGroup(groupName: { name: string }, file?: File | null): Observable<any> {\r\n        const url = environment.apiUrl + '/messages/create';  // Endpoint del backend\r\n        const token = sessionStorage.getItem('token');\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n\r\n        const formData = new FormData();\r\n        formData.append('group', JSON.stringify({ name: groupName.name }));\r\n        if (file) {\r\n            formData.append('file', file); // Solo agregar el archivo si está presente\r\n        }\r\n\r\n        return this.http.post<any>(url, formData, { headers });\r\n    }\r\n\r\n    // Añadir usuarios a un grupo\r\n    addUsersToGroup(groupId: number, userIds: number[]): Observable<any> {\r\n        const url = environment.apiUrl + `/messages/addUsersToGroup`; // Endpoint del backend\r\n        const token = sessionStorage.getItem('token');\r\n        const headers = { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' };\r\n        const params = { groupId }; // Solo enviamos el groupId como parámetro\r\n        const body = userIds; // Lista de IDs de usuarios en el cuerpo de la solicitud\r\n\r\n        return this.http.post<any>(url, body, { headers, params });\r\n    }\r\n\r\n    // Obtener mensajes por grupo\r\n    getMessagesByGroup(groupId: number): Observable<ChatMessage[]> {\r\n        const url = environment.apiUrl + `/messages/group/${groupId}`; // Endpoint del backend\r\n        const token = sessionStorage.getItem('token'); // Obtiene el token de sesión\r\n        const headers = { Authorization: `Bearer ${token}` }; // Incluye el token en los headers\r\n\r\n        return this.http.get<ChatMessage[]>(url, { headers });\r\n    }\r\n\r\n    // Obtener los últimos mensajes de los grupos\r\n    getUltimosMensajesPorGrupo(): Observable<any> {\r\n        const url = environment.apiUrl + `/messages/grupos/ultimos-mensajes`; // Endpoint del backend\r\n        const token = sessionStorage.getItem('token'); // Obtiene el token de sesión\r\n        const headers = { Authorization: `Bearer ${token}` }; // Incluye el token en los headers\r\n        return this.http.get<any>(url, { headers }); // Llama al endpoint del backend\r\n    }\r\n\r\n    // Desconectar el WebSocket\r\n    disconnect() {\r\n        if (this.stompClient && this.stompClient.active) {\r\n            this.stompClient.deactivate();\r\n            console.log('Conexión WebSocket cerrada.');\r\n        }\r\n    }\r\n}\r\n","/**\n *\n * @private\n * @param {any} a\n */\nfunction isObject(a) {\n  if (typeof a !== 'object' || a instanceof Array) {\n    return false;\n  } else {\n    return true;\n  }\n}\nclass Config {\n  filterOutNonSupportedKeys(userProvidedConfig, validKeys) {\n    const obj = Object.create({});\n    if (isObject(userProvidedConfig)) {\n      Object.keys(userProvidedConfig).forEach(key => {\n        if (validKeys.indexOf(key) >= 0) {\n          obj[key] = userProvidedConfig[key];\n        } else {\n          console.warn('Warning - unsupported key provided to configuration: ', key);\n        }\n      });\n      return obj;\n    } else {\n      return Object.create({});\n    }\n  }\n}\nexport default Config;","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\n/**\n * @private\n */\nexport const ALLOWED_URL_CONFIG = ['cname', 'secureDistribution', 'privateCdn', 'signUrl', 'longUrlSignature', 'shorten', 'useRootPath', 'secure', 'forceVersion', 'analytics', 'queryParams'];\n/**\n * @private\n */\nexport const ALLOWED_CLOUD_CONFIG = ['cloudName', 'apiKey', 'apiSecret', 'authToken'];","import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\nclass URLConfig extends Config {\n  /**\n   * @param {IURLConfig} userURLConfig\n   */\n  constructor(userURLConfig) {\n    super();\n    const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n    Object.assign(this, {\n      secure: true\n    }, urlConfig);\n  }\n  extend(userURLConfig) {\n    const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n    return new URLConfig(Object.assign({}, this, urlConfig));\n  }\n  /**\n   * @param {string} value Sets the cname\n   */\n  setCname(value) {\n    this.cname = value;\n    return this;\n  }\n  /**\n   * @param {string} value Sets the secureDistribution\n   */\n  setSecureDistribution(value) {\n    this.secureDistribution = value;\n    return this;\n  }\n  /**\n   * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\n   */\n  setPrivateCdn(value) {\n    this.privateCdn = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to sign the URL\n   */\n  setSignUrl(value) {\n    this.signUrl = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to use a long signature\n   */\n  setLongUrlSignature(value) {\n    this.longUrlSignature = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to shorten the URL\n   */\n  setShorten(value) {\n    this.shorten = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to use a root path\n   */\n  setUseRootPath(value) {\n    this.useRootPath = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to deliver the asset through https\n   */\n  setSecure(value) {\n    this.secure = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether to force a version in the URL\n   */\n  setForceVersion(value) {\n    this.forceVersion = value;\n    return this;\n  }\n  /**\n   * @param params Sets additional params\n   */\n  setQueryParams(params) {\n    this.queryParams = params;\n    return this;\n  }\n}\nexport default URLConfig;","/**\n * @summary SDK\n * @memberOf SDK\n */\nclass QualifierValue {\n  /**\n   *\n   * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\n   */\n  constructor(qualifierValue) {\n    this.values = [];\n    this.delimiter = ':'; // {value}{delimiter}{value}...\n    if (this.hasValue(qualifierValue)) {\n      this.addValue(qualifierValue);\n    }\n  }\n  /**\n   * @description Joins the provided values with the provided delimiter\n   */\n  toString() {\n    return this.values.join(this.delimiter);\n  }\n  /**\n   * @description Checks if the provided argument has a value\n   * @param {any} v\n   * @private\n   * @return {boolean}\n   */\n  hasValue(v) {\n    return typeof v !== 'undefined' && v !== null && v !== '';\n  }\n  /**\n   * @desc Adds a value for the this qualifier instance\n   * @param {any} value\n   * @return {this}\n   */\n  addValue(value) {\n    // Append value or array of values\n    if (Array.isArray(value)) {\n      this.values = this.values.concat(value);\n    } else {\n      this.values.push(value);\n    }\n    // Remove falsy values\n    this.values = this.values.filter(v => this.hasValue(v));\n    return this;\n  }\n  /**\n   * @description Sets the delimiter for this instance\n   * @param delimiter\n   */\n  setDelimiter(delimiter) {\n    this.delimiter = delimiter;\n    return this;\n  }\n}\nexport { QualifierValue };","class UnsupportedError extends Error {\n  constructor(message = 'Unsupported') {\n    super(message);\n  }\n}\n/**\n * Creates a new UnsupportedError\n * @param message\n */\nfunction createUnsupportedError(message) {\n  return new UnsupportedError(message);\n}\nexport { UnsupportedError, createUnsupportedError };","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function qualifierToJson() {\n  return this._qualifierModel || {\n    error: createUnsupportedError(`unsupported qualifier ${this.constructor.name}`)\n  };\n}","import { qualifierToJson } from \"./qualifierToJson.js\";\nexport class QualifierModel {\n  constructor() {\n    this._qualifierModel = {};\n  }\n  toJson() {\n    return qualifierToJson.apply(this);\n  }\n}","import { QualifierValue } from './QualifierValue.js';\nimport { QualifierModel } from '../models/QualifierModel.js';\n/**\n * @summary SDK\n * @memberOf SDK\n */\nclass Qualifier extends QualifierModel {\n  constructor(key, qualifierValue) {\n    super();\n    this.delimiter = '_'; // {key}{delimiter}{qualifierValue}\n    this.key = key;\n    if (qualifierValue instanceof QualifierValue) {\n      this.qualifierValue = qualifierValue;\n    } else {\n      this.qualifierValue = new QualifierValue();\n      this.qualifierValue.addValue(qualifierValue);\n    }\n  }\n  toString() {\n    const {\n      key,\n      delimiter,\n      qualifierValue\n    } = this;\n    return `${key}${delimiter}${qualifierValue.toString()}`;\n  }\n  addValue(value) {\n    this.qualifierValue.addValue(value);\n    return this;\n  }\n}\nexport { Qualifier };","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\nclass FlagQualifier extends Qualifier {\n  constructor(flagType, flagValue) {\n    let qualifierValue;\n    if (flagValue) {\n      qualifierValue = new QualifierValue([flagType, `${flagValue}`]).setDelimiter(':');\n    } else {\n      qualifierValue = flagType;\n    }\n    super('fl', qualifierValue);\n    this.flagValue = flagValue;\n  }\n  toString() {\n    return super.toString().replace(/\\./g, '%2E');\n  }\n  getFlagValue() {\n    return this.flagValue;\n  }\n}\nexport { FlagQualifier };","/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n  const array = Array.from(map.entries());\n  // objects from the Array.from() method above are stored in array of arrays:\n  // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n  // Flags is an array of FlagQualifierObj\n  // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n  flags.forEach(flag => {\n    array.push(['fl', flag]); // push ['fl', flagQualifier]\n  });\n  return array.sort().map(v => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\nexport { isString, mapToSortedArray };","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function actionToJson() {\n  var _a, _b, _c;\n  const actionModelIsNotEmpty = this._actionModel && Object.keys(this._actionModel).length;\n  const sourceTransformationError = (_c = (_b = (_a = this._actionModel) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.transformation) === null || _c === void 0 ? void 0 : _c.error;\n  // Should return error when there is unsupported transformation inside\n  if (sourceTransformationError && sourceTransformationError instanceof Error) {\n    return {\n      error: sourceTransformationError\n    };\n  }\n  if (actionModelIsNotEmpty) {\n    return this._actionModel;\n  }\n  return {\n    error: createUnsupportedError(`unsupported action ${this.constructor.name}`)\n  };\n}","import { actionToJson } from \"./actionToJson.js\";\nexport class ActionModel {\n  constructor() {\n    this._actionModel = {};\n  }\n  toJson() {\n    return actionToJson.apply(this);\n  }\n}","import { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"./qualifier/Qualifier.js\";\nimport { mapToSortedArray } from \"./utils/dataStructureUtils.js\";\nimport { ActionModel } from \"./models/ActionModel.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines the category of transformation to perform.\n */\nclass Action extends ActionModel {\n  constructor() {\n    super(...arguments);\n    // We're using map, to overwrite existing keys. for example:\n    // addParam(w_100).addQualifier(w_200) should result in w_200. and not w_100,w_200\n    this.qualifiers = new Map();\n    // Unlike regular qualifiers, there can be multiple flags in each url component /fl_1,fl_2/\n    // If the falgs are added to the qualifiers map, only a single flag could exist in a component (it's a map)\n    // So flags are stored separately until the very end because of that reason\n    this.flags = [];\n    this.delimiter = ','; // {qualifier}{delimiter}{qualifier} for example: `${'w_100'}${','}${'c_fill'}`\n    this.actionTag = ''; // A custom name tag to identify this action in the future\n  }\n  prepareQualifiers() {}\n  /**\n   * @description Returns the custom name tag that was given to this action\n   * @return {string}\n   */\n  getActionTag() {\n    return this.actionTag;\n  }\n  /**\n   * @description Sets the custom name tag for this action\n   * @return {this}\n   */\n  setActionTag(tag) {\n    this.actionTag = tag;\n    return this;\n  }\n  /**\n   * @description Calls toString() on all child qualifiers (implicitly by using .join()).\n   * @return {string}\n   */\n  toString() {\n    this.prepareQualifiers();\n    return mapToSortedArray(this.qualifiers, this.flags).join(this.delimiter);\n  }\n  /**\n   * @description Adds the parameter to the action.\n   * @param {SDK.Qualifier} qualifier\n   * @return {this}\n   */\n  addQualifier(qualifier) {\n    // if string, find the key and value\n    if (typeof qualifier === 'string') {\n      const [key, value] = qualifier.toLowerCase().split('_');\n      if (key === 'fl') {\n        // if string qualifier is a flag, store it in the flags arrays\n        this.flags.push(new FlagQualifier(value));\n      } else {\n        // if the string qualifier is not a flag, create a new qualifier from it\n        this.qualifiers.set(key, new Qualifier(key, value));\n      }\n    } else {\n      // if a qualifier object, insert to the qualifiers map\n      this.qualifiers.set(qualifier.key, qualifier);\n    }\n    return this;\n  }\n  /**\n   * @description Adds a flag to the current action.\n   * @param {Qualifiers.Flag} flag\n   * @return {this}\n   */\n  addFlag(flag) {\n    if (typeof flag === 'string') {\n      this.flags.push(new FlagQualifier(flag));\n    } else {\n      if (flag instanceof FlagQualifier) {\n        this.flags.push(flag);\n      }\n    }\n    return this;\n  }\n  addValueToQualifier(qualifierKey, qualifierValue) {\n    this.qualifiers.get(qualifierKey).addValue(qualifierValue);\n    return this;\n  }\n}\nexport { Action };","/**\n * Returns RGB or Color\n * @private\n * @param color\n */\nexport function prepareColor(color) {\n  if (color) {\n    return color.match(/^#/) ? `rgb:${color.substr(1)}` : color;\n  } else {\n    return color;\n  }\n}","import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @extends SDK.Action\n * @description A class for background transformations.\n */\nclass BackgroundColor extends Action {\n  constructor(color) {\n    super();\n    this._actionModel = {};\n    this.addQualifier(new Qualifier('b', new QualifierValue(prepareColor(color)).setDelimiter('_')));\n    this._actionModel.color = color;\n    this._actionModel.actionType = 'backgroundColor';\n  }\n  static fromJson(actionModel) {\n    const {\n      color\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(color);\n    return result;\n  }\n}\nexport { BackgroundColor };","import { createUnsupportedError } from \"./utils/unsupportedError.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines an action that's a string literal, no validations or manipulations are performed\n */\nclass RawAction {\n  constructor(raw) {\n    this.raw = raw;\n  }\n  toString() {\n    return this.raw;\n  }\n  toJson() {\n    return {\n      error: createUnsupportedError(`unsupported action ${this.constructor.name}`)\n    };\n  }\n}\nexport { RawAction };","/**\n * Validates obj is an instance of IErrorObject\n * @param obj\n */\nfunction isErrorObject(obj) {\n  const errorObj = obj;\n  return 'error' in errorObj && !!errorObj.error;\n}\nexport { isErrorObject };","/**\n * @description Defines flags that you can use to alter the default transformation behavior.\n * @namespace Flag\n * @memberOf Qualifiers\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used when delivering a video file as an image format that supports animation, such as animated WebP.\n * Plays all frames rather than just delivering the first one as a static image.\n * Use this flag in addition to the flag or parameter controlling the delivery format,\n * for example f_auto or fl_awebp.\n\n * Note: When delivering a video in GIF format, it is delivered as an animated GIF by default and this flag is not\n * necessary. To deliver a single frame of a video in GIF format, use the page parameter.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animated() {\n  return new FlagQualifier('animated');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to WebP format, generate an animated WebP from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated WebPs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedWebP() {\n  return new FlagQualifier('awebp');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used together with automatic quality (q_auto):\n * allow switching to PNG8 encoding if the quality algorithm decides that it's more efficient.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction anyFormat() {\n  return new FlagQualifier('any_format');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to PNG format, generates an animated PNG from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated PNGs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedPng() {\n  return new FlagQualifier('apng');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image\n * (e.g., manually created using PhotoShop).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clip() {\n  return new FlagQualifier('clip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image (e.g., manually created\n * using PhotoShop)\n * using an evenodd clipping rule.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clipEvenOdd() {\n  return new FlagQualifier('clip_evenodd');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all image meta-data (IPTC, Exif and XMP) while applying an incoming\n * transformation.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceStrip() {\n  return new FlagQualifier('force_strip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Allows custom flag\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction custom(value) {\n  return new FlagQualifier(value);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Adds ICC color space metadata to the image, even when the original image doesn't contain any ICC data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceIcc() {\n  return new FlagQualifier('force_icc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Delivers the image as an attachment.\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction attachment(filename) {\n  return new FlagQualifier('attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Returns metadata of the input asset and of the transformed output asset in JSON instead of the\n * transformed image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction getInfo() {\n  return new FlagQualifier('getinfo');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Deliver an HLS adaptive bitrate streaming file as HLS v3 instead of the default version (HLS v4).\n * Delivering in this format requires a private CDN configuration.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction hlsv3() {\n  return new FlagQualifier('hlsv3');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Sets the cache-control to immutable for the asset.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction immutableCache() {\n  return new FlagQualifier('immutable_cache');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description * Allows specifying only either width or height so the value of the second axis remains as is, and is not\n * recalculated to maintain the aspect ratio of the original image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n  return new FlagQualifier('ignore_aspect_ratio');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps the copyright related fields when stripping meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepAttribution() {\n  return new FlagQualifier('keep_attribution');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * Keep the Display Aspect Ratio metadata of the uploaded video (if it’s different from the current video\n * dimensions).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepDar() {\n  return new FlagQualifier('keep_dar');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps all meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepIptc() {\n  return new FlagQualifier('keep_iptc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Applies all chained transformations, until a transformation component that includes this flag, on the last added\n * overlay or underlay instead of applying on the containing image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction layerApply() {\n  return new FlagQualifier('layer_apply');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Automatically use lossy compression when delivering animated GIF files.\n *\n * This flag can also be used as a conditional flag for delivering PNG files: it tells Cloudinary to deliver the\n * image in PNG format (as requested) unless there is no transparency channel - in which case deliver in JPEG\n * format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction lossy() {\n  return new FlagQualifier('lossy');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Convert the audio channel to mono\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction mono() {\n  return new FlagQualifier('mono');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noOverflow() {\n  return new FlagQualifier('no_overflow');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Don't stream a video that is currently being generated on the fly. Wait until the video is fully generated.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noStream() {\n  return new FlagQualifier('no_stream');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png24 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png24() {\n  return new FlagQualifier('png24');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png32 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png32() {\n  return new FlagQualifier('png32');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the PNG8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png8() {\n  return new FlagQualifier('png8');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used with automatic fetch_format (f_auto): ensures that images with a transparency channel will be\n * delivered in PNG format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction preserveTransparency() {\n  return new FlagQualifier('preserve_transparency');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates a JPG image using the progressive (interlaced) JPG format.\n *\n * This format allows the browser to quickly show a low-quality rendering of the image until the full-quality\n * image is loaded.\n *\n * @param {string} mode? The mode to determine a specific progressive outcome as follows:\n * * semi - A smart optimization of the decoding time, compression level and progressive rendering\n *          (less iterations). This is the default mode when using q_auto.\n * * steep - Delivers a preview very quickly, and in a single later phase improves the image to\n *           the required resolution.\n * * none  - Use this to deliver a non-progressive image. This is the default mode when setting\n *           a specific value for quality.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction progressive(mode) {\n  return new FlagQualifier('progressive', mode);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the overlaid region\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction regionRelative() {\n  return new FlagQualifier('region_relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Reduces the image to one flat pixelated layer (as opposed to the default vector based graphic) in\n * order to enable\n * PDF resizing and overlay manipulations.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction rasterize() {\n  return new FlagQualifier('rasterize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the containing image instead of the added layer.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction relative() {\n  return new FlagQualifier('relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to run a sanitizer on the image (relevant only for the SVG format).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction sanitize() {\n  return new FlagQualifier('sanitize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Splices the video stipulated as an overlay on to the end of the container video instead of adding it as an\n * overlay.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction splice() {\n  return new FlagQualifier('splice');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all ICC color profile data included with the image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction stripProfile() {\n  return new FlagQualifier('strip_profile');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description If the requested video transformation has already been generated, this flag works identically to\n * Flag::attachment.\n *\n *  However, if the video transformation is being requested for the first time, this flag causes the video download\n * to begin immediately, streaming it as a fragmented video file.\n *\n * In contrast, if the regular fl_attachment flag is used when a user requests a new video transformation,\n * the download will begin only after the complete transformed video has been generated.\n *\n * Most standard video players successfully play fragmented video files without issue.\n *\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction streamingAttachment(filename) {\n  return new FlagQualifier('streaming_attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates TIFF images using LZW compression and in the TIFF8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiff8Lzw() {\n  return new FlagQualifier('tiff8_lzw');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiled() {\n  return new FlagQualifier('tiled');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Truncate (trim) a video file based on the start time defined in the metadata (relevant only where the metadata\n * includes a directive to play only a section of the video).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction truncateTS() {\n  return new FlagQualifier('truncate_ts');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Create a waveform image (in the format specified by the file extension) from the audio or video file.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction waveform() {\n  return new FlagQualifier('waveform');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description A qualifier that ensures that an alpha channel is not applied to a TIFF image if it is a mask channel.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreMaskChannels() {\n  return new FlagQualifier('ignore_mask_channels');\n}\nconst Flag = {\n  animated,\n  anyFormat,\n  animatedPng,\n  animatedWebP,\n  clipEvenOdd,\n  lossy,\n  preserveTransparency,\n  png8,\n  png24,\n  png32,\n  progressive,\n  rasterize,\n  sanitize,\n  stripProfile,\n  tiff8Lzw,\n  attachment,\n  forceIcc,\n  forceStrip,\n  getInfo,\n  immutableCache,\n  keepAttribution,\n  keepIptc,\n  custom,\n  streamingAttachment,\n  hlsv3,\n  keepDar,\n  noStream,\n  mono,\n  layerApply,\n  relative,\n  regionRelative,\n  splice,\n  truncateTS,\n  waveform,\n  ignoreInitialAspectRatio,\n  clip,\n  tiled,\n  noOverflow,\n  ignoreMaskChannels\n};\nexport { Flag, animated, anyFormat, animatedPng, animatedWebP, clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize, sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache, keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono, layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip, tiled, noOverflow, ignoreMaskChannels };","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.Format\n * @extends {SDK.QualifierValue}\n */\nclass FormatQualifier extends QualifierValue {\n  constructor(val) {\n    super(val);\n    this.val = val;\n  }\n  getValue() {\n    return this.val;\n  }\n}\nexport { FormatQualifier };","/**\n * Flip keys and values for given object\n * @param obj\n */\nfunction objectFlip(obj) {\n  const result = {};\n  Object.keys(obj).forEach(key => {\n    result[obj[key]] = key;\n  });\n  return result;\n}\nexport { objectFlip };","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\nimport { objectFlip } from \"./utils/objectFlip.js\";\nexport const CONDITIONAL_OPERATORS = {\n  \"=\": \"eq\",\n  \"!=\": \"ne\",\n  \"<\": \"lt\",\n  \">\": \"gt\",\n  \"<=\": \"lte\",\n  \">=\": \"gte\",\n  \"&&\": \"and\",\n  \"||\": \"or\",\n  \"*\": \"mul\",\n  \"/\": \"div\",\n  \"+\": \"add\",\n  \"-\": \"sub\",\n  \"^\": \"pow\"\n};\nexport const RESERVED_NAMES = {\n  \"aspect_ratio\": \"ar\",\n  \"aspectRatio\": \"ar\",\n  \"current_page\": \"cp\",\n  \"currentPage\": \"cp\",\n  \"duration\": \"du\",\n  \"face_count\": \"fc\",\n  \"faceCount\": \"fc\",\n  \"height\": \"h\",\n  \"initial_aspect_ratio\": \"iar\",\n  \"initial_height\": \"ih\",\n  \"initial_width\": \"iw\",\n  \"initialAspectRatio\": \"iar\",\n  \"initialHeight\": \"ih\",\n  \"initialWidth\": \"iw\",\n  \"initial_duration\": \"idu\",\n  \"initialDuration\": \"idu\",\n  \"page_count\": \"pc\",\n  \"page_x\": \"px\",\n  \"page_y\": \"py\",\n  \"pageCount\": \"pc\",\n  \"pageX\": \"px\",\n  \"pageY\": \"py\",\n  \"tags\": \"tags\",\n  \"width\": \"w\",\n  \"trimmed_aspect_ratio\": \"tar\",\n  \"current_public_id\": \"cpi\",\n  \"initial_density\": \"idn\",\n  \"page_names\": \"pgnames\"\n};\nexport const ACTION_TYPE_TO_CROP_MODE_MAP = {\n  limitFit: 'limit',\n  limitFill: 'lfill',\n  minimumFit: 'mfit',\n  thumbnail: 'thumb',\n  limitPad: 'lpad',\n  minimumPad: 'mpad',\n  autoPad: 'auto_pad'\n};\nexport const ACTION_TYPE_TO_DELIVERY_MODE_MAP = {\n  colorSpace: 'cs',\n  dpr: 'dpr',\n  density: 'dn',\n  defaultImage: 'd',\n  format: 'f',\n  quality: 'q'\n};\nexport const ACTION_TYPE_TO_EFFECT_MODE_MAP = {\n  redEye: 'redeye',\n  advancedRedEye: 'adv_redeye',\n  oilPaint: 'oil_paint',\n  unsharpMask: 'unsharp_mask',\n  makeTransparent: 'make_transparent',\n  generativeRestore: 'gen_restore',\n  upscale: 'upscale'\n};\nexport const ACTION_TYPE_TO_QUALITY_MODE_MAP = {\n  autoBest: 'auto:best',\n  autoEco: 'auto:eco',\n  autoGood: 'auto:good',\n  autoLow: 'auto:low',\n  jpegminiHigh: 'jpegmini:1',\n  jpegminiMedium: 'jpegmini:2',\n  jpegminiBest: 'jpegmini:0'\n};\nexport const ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP = {\n  fullHd: 'full_hd',\n  fullHdWifi: 'full_hd_wifi',\n  fullHdLean: 'full_hd_lean',\n  hdLean: 'hd_lean'\n};\nexport const CHROMA_VALUE_TO_CHROMA_MODEL_ENUM = {\n  444: \"CHROMA_444\",\n  420: \"CHROMA_420\"\n};\nexport const COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP = {\n  'noCmyk': 'no_cmyk',\n  'keepCmyk': 'keep_cmyk',\n  'tinySrgb': 'tinysrgb',\n  'srgbTrueColor': 'srgb:truecolor'\n};\nexport const ACTION_TYPE_TO_BLEND_MODE_MAP = {\n  'antiRemoval': 'anti_removal'\n};\nexport const CHROMA_MODEL_ENUM_TO_CHROMA_VALUE = objectFlip(CHROMA_VALUE_TO_CHROMA_MODEL_ENUM);\nexport const COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP = objectFlip(COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP);\nexport const CROP_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_CROP_MODE_MAP);\nexport const DELIVERY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_DELIVERY_MODE_MAP);\nexport const EFFECT_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_EFFECT_MODE_MAP);\nexport const QUALITY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_QUALITY_MODE_MAP);\nexport const STREAMING_PROFILE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP);","import { Action } from \"../../internal/Action.js\";\nimport { FormatQualifier } from \"../../qualifiers/format/FormatQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DELIVERY_MODE_TO_ACTION_TYPE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Qualifies the delivery of an asset.\n * @memberOf Actions.Delivery\n * @extends SDK.Action\n */\nclass DeliveryAction extends Action {\n  /**\n   * @param {string} deliveryKey A generic Delivery Action Key (such as q, f, dn, etc.)\n   * @param {string} deliveryType A Format Qualifiers for the action, such as Quality.auto()\n   * @param {string} modelProperty internal model property of the action, for example quality uses `level` while dpr uses `density`\n   * @see Visit {@link Actions.Delivery|Delivery} for an example\n   */\n  constructor(deliveryKey, deliveryType, modelProperty) {\n    super();\n    this._actionModel = {};\n    let deliveryTypeValue;\n    if (deliveryType instanceof FormatQualifier) {\n      deliveryTypeValue = deliveryType.getValue();\n    } else {\n      deliveryTypeValue = deliveryType;\n    }\n    this._actionModel.actionType = DELIVERY_MODE_TO_ACTION_TYPE_MAP[deliveryKey];\n    this._actionModel[modelProperty] = deliveryTypeValue;\n    this.addQualifier(new Qualifier(deliveryKey, deliveryType));\n  }\n}\nexport { DeliveryAction };","/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n  constructor(mode) {\n    super('progressive', mode);\n  }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n  return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n  return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n  return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n  return new ProgressiveQualifier();\n}\nconst Progressive = {\n  semi,\n  none,\n  steep,\n  progressive,\n  ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };","import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n  constructor(deliveryKey, deliveryType) {\n    super(deliveryKey, deliveryType, 'formatType');\n  }\n  /**\n   * @description Uses lossy compression when delivering animated GIF files.\n   * @return {this}\n   */\n  lossy() {\n    this._actionModel.lossy = true;\n    this.addFlag(lossy());\n    return this;\n  }\n  /**\n   * @description Uses progressive compression when delivering JPG file format.\n   * @return {this}\n   */\n  progressive(mode) {\n    if (mode instanceof ProgressiveQualifier) {\n      this._actionModel.progressive = {\n        mode: mode.getFlagValue()\n      };\n      this.addFlag(mode);\n    } else {\n      this._actionModel.progressive = {\n        mode: mode\n      };\n      this.addFlag(progressive(mode));\n    }\n    return this;\n  }\n  /**\n   * @description Ensures that images with a transparency channel are delivered in PNG format.\n   */\n  preserveTransparency() {\n    this._actionModel.preserveTransparency = true;\n    this.addFlag(preserveTransparency());\n    return this;\n  }\n  static fromJson(actionModel) {\n    const {\n      formatType,\n      lossy,\n      progressive,\n      preserveTransparency\n    } = actionModel;\n    let result;\n    if (formatType) {\n      result = new this('f', formatType);\n    } else {\n      result = new this('f');\n    }\n    if (progressive) {\n      if (progressive.mode) {\n        result.progressive(progressive.mode);\n      } else {\n        result.progressive();\n      }\n    }\n    lossy && result.lossy();\n    preserveTransparency && result.preserveTransparency();\n    return result;\n  }\n}\nexport { DeliveryFormatAction };","import { Action } from \"../internal/Action.js\";\nimport { BackgroundColor } from \"../actions/background/actions/BackgroundColor.js\";\nimport { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { RawAction } from \"../internal/RawAction.js\";\nimport { isErrorObject } from \"../internal/models/IErrorObject.js\";\nimport { DeliveryFormatAction } from \"../actions/delivery/DeliveryFormatAction.js\";\n/**\n * @summary SDK\n * @description - Defines how to transform an asset\n * @memberOf SDK\n */\nclass Transformation {\n  constructor() {\n    this.actions = [];\n  }\n  /**\n   * @param {SDK.Action | string} action\n   * @return {this}\n   */\n  addAction(action) {\n    let actionToAdd;\n    if (typeof action === 'string') {\n      if (action.indexOf('/') >= 0) {\n        throw 'addAction cannot accept a string with a forward slash in it - /, use .addTransformation() instead';\n      } else {\n        actionToAdd = new RawAction(action);\n      }\n    } else {\n      actionToAdd = action;\n    }\n    this.actions.push(actionToAdd);\n    return this;\n  }\n  /**\n   * @description Allows the injection of a raw transformation as a string into the transformation, or a Transformation instance that was previously created\n   * @param {string | SDK.Transformation} tx\n   * @example\n   * import {Transformation} from \"@cloudinary/url-gen\";\n   *\n   * const transformation = new Transformation();\n   * transformation.addTransformation('w_100/w_200/w_300');\n   * @return {this}\n   */\n  addTransformation(tx) {\n    if (tx instanceof Transformation) {\n      // Concat the new actions into the existing actions\n      this.actions = this.actions.concat(tx.actions);\n    } else {\n      this.actions.push(new RawAction(tx));\n    }\n    return this;\n  }\n  /**\n   * @return {string}\n   */\n  toString() {\n    return this.actions.map(action => {\n      return action.toString();\n    }).filter(a => a).join('/');\n  }\n  /**\n   * @description Delivers an animated GIF.\n   * @param {AnimatedAction} animatedAction\n   * @return {this}\n   */\n  animated(animatedAction) {\n    return this.addAction(animatedAction);\n  }\n  /**\n   * @description Adds a border around the image.\n   * @param {Border} borderAction\n   * @return {this}\n   */\n  border(borderAction) {\n    return this.addAction(borderAction);\n  }\n  /**\n   * @description Adjusts the shape of the delivered image. </br>\n   * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#distort|Shape changes and distortion effects}\n   * @param {IReshape} reshapeAction\n   * @return {this}\n   */\n  reshape(reshapeAction) {\n    return this.addAction(reshapeAction);\n  }\n  /**\n   * @description Resize the asset using provided resize action\n   * @param {ResizeSimpleAction} resizeAction\n   * @return {this}\n   */\n  resize(resizeAction) {\n    return this.addAction(resizeAction);\n  }\n  /**\n   * @desc An alias to Action Delivery.quality\n   * @param {string|number} quality\n   * @return {this}\n   */\n  quality(quality) {\n    this.addAction(new DeliveryFormatAction('q', quality));\n    return this;\n  }\n  /**\n   * @desc An alias to Action Delivery.format\n   * @param {string} format\n   * @return {this}\n   */\n  format(format) {\n    this.addAction(new DeliveryFormatAction('f', format));\n    return this;\n  }\n  /**\n   * @description Rounds the specified corners of an image.\n   * @param roundCornersAction\n   * @return {this}\n   */\n  roundCorners(roundCornersAction) {\n    return this.addAction(roundCornersAction);\n  }\n  /**\n   * @description Adds an overlay over the base image.\n   * @param {LayerAction} overlayAction\n   * @return {this}\n   */\n  overlay(overlayAction) {\n    return this.addAction(overlayAction);\n  }\n  /**\n   * @description Adds an underlay under the base image.\n   * @param {LayerAction} underlayAction\n   * @return {this}\n   */\n  underlay(underlayAction) {\n    underlayAction.setLayerType('u');\n    return this.addAction(underlayAction);\n  }\n  /**\n   * @description Defines an new user variable.\n   * @param {VariableAction} variableAction\n   * @return {this}\n   */\n  addVariable(variableAction) {\n    return this.addAction(variableAction);\n  }\n  /**\n   * @description Specifies a condition to be met before applying a transformation.\n   * @param {ConditionalAction} conditionAction\n   * @return {this}\n   */\n  conditional(conditionAction) {\n    return this.addAction(conditionAction);\n  }\n  /**\n   * @description Applies a filter or an effect on an asset.\n   * @param {SimpleEffectAction} effectAction\n   * @return {this}\n   */\n  effect(effectAction) {\n    return this.addAction(effectAction);\n  }\n  /**\n   * @description Applies adjustment effect on an asset.\n   * @param action\n   * @return {this}\n   */\n  adjust(action) {\n    return this.addAction(action);\n  }\n  /**\n   * @description Rotates the asset by the given angle.\n   * @param {RotateAction} rotateAction\n   * @return {this}\n   */\n  rotate(rotateAction) {\n    return this.addAction(rotateAction);\n  }\n  /**\n   * @description Applies a pre-defined named transformation of the given name.\n   * @param {NamedTransformation} namedTransformation\n   * @return {this}\n   */\n  namedTransformation(namedTransformation) {\n    return this.addAction(namedTransformation);\n  }\n  /**\n   * @description Applies delivery action.\n   * @param deliveryAction\n   * @return {this}\n   */\n  delivery(deliveryAction) {\n    return this.addAction(deliveryAction);\n  }\n  /**\n   * @description Sets the color of the background.\n   * @param {Qualifiers.Color} color\n   * @return {this}\n   */\n  backgroundColor(color) {\n    return this.addAction(new BackgroundColor(color));\n  }\n  /**\n   * @description Adds a layer in a Photoshop document.\n   * @param action\n   * @return {this}\n   */\n  psdTools(action) {\n    return this.addAction(action);\n  }\n  /**\n   * @description Extracts an image or a page using an index, a range, or a name from a layered media asset.\n   * @param action\n   * @return {this}\n   */\n  extract(action) {\n    return this.addAction(action);\n  }\n  /**\n   * @description Adds a flag as a separate action.\n   * @param {Qualifiers.Flag | string} flagQualifier\n   * @return {this}\n   */\n  addFlag(flagQualifier) {\n    const action = new Action();\n    let flagToAdd = flagQualifier;\n    if (typeof flagQualifier === 'string') {\n      flagToAdd = new FlagQualifier(flagQualifier);\n    }\n    action.addQualifier(flagToAdd);\n    return this.addAction(action);\n  }\n  /**\n   * @description Inject a custom function into the image transformation pipeline.\n   * @return {this}\n   */\n  customFunction(customFunction) {\n    return this.addAction(customFunction);\n  }\n  /**\n   * Transcodes the video (or audio) to another format.\n   * @param {Action} action\n   * @return {this}\n   */\n  transcode(action) {\n    return this.addAction(action);\n  }\n  /**\n   * Applies the specified video edit action.\n   *\n   * @param {videoEditType} action\n   * @return {this}\n   */\n  videoEdit(action) {\n    return this.addAction(action);\n  }\n  toJson() {\n    const actions = [];\n    for (const action of this.actions) {\n      const json = action.toJson();\n      if (isErrorObject(json)) {\n        // Fail early and return an IErrorObject\n        return json;\n      }\n      actions.push(json);\n    }\n    return {\n      actions\n    };\n  }\n}\nexport { Transformation };","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass ImageTransformation extends Transformation {}\nexport { ImageTransformation };","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass VideoTransformation extends Transformation {}\nexport { VideoTransformation };","import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Applies a pre-defined named transformation of the given name, used with a builder from {@link Actions.NamedTransformation|Named Transformation}\n * @extends SDK.Action\n * @memberOf Actions.NamedTransformation\n * @see Visit {@link Actions.NamedTransformation|Named Transformation} for an example\n */\nclass NamedTransformationAction extends Action {\n  /**\n   *\n   * @param {string} name The name of the named transformation\n   */\n  constructor(name) {\n    super();\n    this.addQualifier(new Qualifier('t', name));\n  }\n}\nexport { NamedTransformationAction };","import { NamedTransformationAction } from \"./namedTransformation/NamedTransformationAction.js\";\n/**\n * Applies a pre-defined named transformation of the given name.\n * @memberOf Actions\n * @namespace NamedTransformation\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {name} from \"@cloudinary/url-gen/actions/namedTransformation\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.namedTransformation(\n *  name('my_named_transformation'),\n * );\n */\n/**\n * @summary action\n * @description Applies a pre-defined named transformation of the given name.\n * @param {string} name Transformation name\n * @memberOf Actions.NamedTransformation\n * @return {Actions.NamedTransformation.NamedTransformationAction}\n */\nfunction name(name) {\n  return new NamedTransformationAction(name);\n}\nconst NamedTransformation = {\n  name\n};\nexport { NamedTransformation, name };","/**\n *\n * @param publicID\n */\nexport function isUrl(publicID) {\n  return publicID.match(/^https?:\\//);\n}","/**\n *\n * @param publicID\n */\nexport function isFileName(publicID) {\n  return publicID.indexOf('/') < 0;\n}","/**\n *\n * @param publicID\n */\nexport function publicIDContainsVersion(publicID) {\n  return publicID.match(/^v[0-9]+/);\n}","import { isUrl } from \"./urlUtils/isUrl.js\";\nimport { isFileName } from \"./urlUtils/isFileName.js\";\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\n/**\n * Create the URL prefix for Cloudinary resources.\n * Available use cases\n * http://res.cloudinary.com/{cloudName}\n * https://res.cloudinary.com/{cloudName}\n * https://{cloudName}-res.cloudinary.com/\n * http://{domain}/${cloudName}\n * https://{domain}/${cloudName}\n * https://{domain}\n * @private\n *\n * @param {string} cloudName\n * @param {IURLConfig} urlConfig\n */\nfunction getUrlPrefix(cloudName, urlConfig) {\n  const secure = urlConfig.secure;\n  const privateCDN = urlConfig.privateCdn;\n  const cname = urlConfig.cname;\n  const secureDistribution = urlConfig.secureDistribution;\n  if (!secure && !cname) {\n    return `http://res.cloudinary.com/${cloudName}`;\n  }\n  if (secure && !secureDistribution && privateCDN) {\n    return `https://${cloudName}-res.cloudinary.com`;\n  }\n  if (secure && !secureDistribution) {\n    return `https://res.cloudinary.com/${cloudName}`;\n  }\n  if (secure && secureDistribution && privateCDN) {\n    return `https://${secureDistribution}`;\n  }\n  if (secure && secureDistribution) {\n    return `https://${secureDistribution}/${cloudName}`;\n  }\n  if (!secure && cname) {\n    return `http://${cname}/${cloudName}`;\n  } else {\n    return 'ERROR';\n  }\n}\n/**\n * @private\n * @param assetType\n */\nfunction handleAssetType(assetType) {\n  //default to image\n  if (!assetType) {\n    return 'image';\n  }\n  return assetType;\n}\n/**\n * @private\n * @param deliveryType\n */\nfunction handleDeliveryType(deliveryType) {\n  //default to upload\n  if (!deliveryType) {\n    return 'upload';\n  }\n  return deliveryType;\n}\n/**\n *\n * @param {string} publicID\n * @param {number} version\n * @param {boolean} forceVersion\n */\nfunction getUrlVersion(publicID, version, forceVersion) {\n  const shouldForceVersion = forceVersion !== false;\n  if (version) {\n    return `v${version}`;\n  }\n  // In all these conditions we never force a version\n  if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\n    return '';\n  }\n  return shouldForceVersion ? 'v1' : '';\n}\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };","/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n  let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n  let padString = String(typeof _padString !== 'undefined' ? _padString : ' ');\n  if (value.length > targetLength) {\n    return String(value);\n  } else {\n    targetLength = targetLength - value.length;\n    if (targetLength > padString.length) {\n      padString += repeatStringNumTimes(padString, targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(value);\n  }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\nfunction repeatStringNumTimes(string, _times) {\n  let times = _times;\n  let repeatedString = \"\";\n  while (times > 0) {\n    repeatedString += string;\n    times--;\n  }\n  return repeatedString;\n}","import { stringPad } from \"./stringPad.js\";\n/**\n * This file maps sequences of 6 bit binary digits to a character in base64.\n * 000000 -> A\n * 110011 -> Z\n * 111111 -> /\n */\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64Map = {};\nlet num = 0;\nchars.split('').forEach(char => {\n  let key = num.toString(2);\n  key = stringPad(key, 6, '0');\n  base64Map[key] = char;\n  num++;\n});\n/**\n * Map of [six-bit binary codes] -> [Base64 characters]\n */\nexport { base64Map };","/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nexport function reverseVersion(semVer) {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  }\n  // Split by '.', reverse, create new array\n  return semVer.split('.').reverse().join('.');\n}","import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Pads each segment with '0' so they have length of 2\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of xx.yy.zz (\n */\nexport function padVersion(semVer) {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  }\n  // Split by '.', reverse, create new array with padded values and concat it together\n  return semVer.split('.').map(segment => {\n    // try to cast to number\n    const asNumber = +segment;\n    if (isNaN(asNumber) || asNumber < 0) {\n      throw 'Invalid version number provided';\n    }\n    return stringPad(segment, 2, '0');\n  }).join('.');\n}","import { base64Map } from \"./base64Map.js\";\nimport { stringPad } from \"./stringPad.js\";\nimport { reverseVersion } from \"./reverseVersion.js\";\nimport { padVersion } from \"./padVersion.js\";\n/**\n * @private\n * @description Encodes a semVer-like version string\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} A string built from 3 characters of the base64 table that encode the semVer\n */\nexport function encodeVersion(semVer) {\n  let strResult = '';\n  // support x.y or x.y.z by using 'parts' as a variable\n  const parts = semVer.split('.').length;\n  const paddedStringLength = parts * 6; // we pad to either 12 or 18 characters\n  // reverse (but don't mirror) the version. 1.5.15 -> 15.5.1\n  const reversedSemver = reverseVersion(semVer);\n  // Pad to two spaces, 15.5.1 -> 15.05.01\n  const paddedSemver = padVersion(reversedSemver);\n  // turn 15.05.01 to a string '150501' then to a number 150501\n  const num = parseInt(paddedSemver.split('.').join(''));\n  // Represent as binary, add left padding to 12 or 18 characters.\n  // 150,501 -> 100100101111100101\n  let paddedBinary = num.toString(2);\n  paddedBinary = stringPad(paddedBinary, paddedStringLength, '0');\n  // Stop in case an invalid version number was provided\n  // paddedBinary must be built from sections of 6 bits\n  if (paddedBinary.length % 6 !== 0) {\n    throw 'Version must be smaller than 43.21.26)';\n  }\n  // turn every 6 bits into a character using the base64Map\n  paddedBinary.match(/.{1,6}/g).forEach(bitString => {\n    // console.log(bitString);\n    strResult += base64Map[bitString];\n  });\n  return strResult;\n}","/**\n * @private\n * @description Gets the analyticsOptions from options- should include sdkSemver, techVersion, sdkCode, and feature\n * @param {ITrackedPropertiesThroughAnalytics} options\n * @returns {IAnalyticsOptions}\n */\nexport function getAnalyticsOptions(options) {\n  const analyticsOptions = {\n    sdkSemver: options.sdkSemver,\n    techVersion: options.techVersion,\n    sdkCode: options.sdkCode,\n    product: options.product,\n    feature: '0',\n    osType: options.osType,\n    osVersion: options.osVersion\n  };\n  if (options.accessibility) {\n    analyticsOptions.feature = 'D';\n  }\n  if (options.lazyload) {\n    analyticsOptions.feature = 'C';\n  }\n  if (options.responsive) {\n    analyticsOptions.feature = 'A';\n  }\n  if (options.placeholder) {\n    analyticsOptions.feature = 'B';\n  }\n  return analyticsOptions;\n}","const packageVersion = '1.21.0';\n/**\n * Export package version (injected during our build).\n * Reason for this is that If we import values from from package.json,\n * it will cause an error for users who do not have an 'import from json' plugin\n * as part of their build process / bundler.\n */\nexport { packageVersion };","import { base64Map } from \"./base64Map.js\";\n/**\n * @private\n * @description Encodes a semVer-like version string for OS\n * @param {string} semVer Input is x.y\n * @return {string} A string built from 2 characters of the base64 table that encode the semVer\n */\nexport function encodeOSVersion(semVer) {\n  const [major, minor] = semVer.split('.');\n  //convert to binary\n  const binaryMajorVersion = parseInt(major).toString(2);\n  const binaryMinorVersion = parseInt(minor).toString(2);\n  //pad to 6\n  const paddedMajor = binaryMajorVersion.padStart(6, '0');\n  const paddedMinor = binaryMinorVersion.padStart(6, '0');\n  return base64Map[paddedMajor] + base64Map[paddedMinor];\n}","import { encodeVersion } from \"./encodeVersion.js\";\nimport { getAnalyticsOptions } from \"./getAnalyticsOptions.js\";\nimport { packageVersion } from \"../internal/utils/packageVersion.js\";\nimport { encodeOSVersion } from \"./encodeOSVersion.js\";\n/**\n * @private\n * @description Try to get the node version out of process, if browser just return 0.0.0\n */\nfunction getNodeVersion() {\n  const failedVersion = '0.0.0';\n  if (typeof window !== 'undefined') {\n    return failedVersion;\n  } else {\n    // node env\n    try {\n      return process.versions.node || failedVersion;\n    } catch (e) {\n      return failedVersion;\n    }\n  }\n}\n/**\n * @private\n * @description Ensure that all values ITrackedPropertiesThroughAnalytics are populated.\n * Accept a partial map of values and returns the complete interface of ITrackedPropertiesThroughAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n */\nfunction ensureShapeOfTrackedProperties(trackedAnalytics) {\n  // try to get the process version from node, but if we're on the client return 0.0.0\n  const defaults = {\n    techVersion: getNodeVersion(),\n    sdkCode: 'T',\n    sdkSemver: packageVersion.split('-')[0],\n    product: 'A',\n    osType: 'Z',\n    osVersion: '0.0',\n    responsive: false,\n    placeholder: false,\n    lazyload: false,\n    accessibility: false\n  };\n  if (!trackedAnalytics) {\n    return defaults;\n  } else {\n    return Object.assign(Object.assign({}, defaults), trackedAnalytics);\n  }\n}\n/**\n * @private\n * @description Creates the complete SDK signature by using all the values provided by ITrackedPropertiesThroughAnalytics\n *              Creation of the signature\n *              - Set the AlgoVersion of the encoding, this is an internal letter that represents the version\n *                of our encoding algorithm, it will allow us to perform breaking changes if we'll need them.\n *              - Take the constant SDK code (Arbitrary letter chosen for each SDK, for Base that letter is 'T')\n *                this is used to tell apart which SDK is being tracked.\n *              - Take the {major.minor} versions of the node version (techVersion) (14.2, 16.2 etc.)\n *              - Take the full semver of the SDK you wish to track\n *              - Take the features used(lazy, placeholder etc.) and turn them to a letter (for example accessibility -> D)\n *              - Before appending the string, the Versions must be encoded, see the function `encodeVersion` for more details\n *              - Append all the variables to a single string\n *              - In any case of an error, return the single letter 'E'\n *\n * @return {string} sdkAnalyticsSignature\n */\nexport function getSDKAnalyticsSignature(_trackedAnalytics) {\n  const trackedAnalytics = ensureShapeOfTrackedProperties(_trackedAnalytics);\n  const analyticsOptions = getAnalyticsOptions(trackedAnalytics);\n  try {\n    const twoPartVersion = removePatchFromSemver(analyticsOptions.techVersion);\n    const encodedSDKVersion = encodeVersion(analyticsOptions.sdkSemver);\n    const encodedTechVersion = encodeVersion(twoPartVersion);\n    const encodedOSVersion = encodeOSVersion(analyticsOptions.osVersion);\n    const featureCode = analyticsOptions.feature;\n    const SDKCode = analyticsOptions.sdkCode;\n    const {\n      product,\n      osType\n    } = analyticsOptions;\n    const algoVersion = 'D'; // The algo version is determined here, it should not be an argument\n    return `${algoVersion}${product}${SDKCode}${encodedSDKVersion}${encodedTechVersion}${osType}${encodedOSVersion}${featureCode}`;\n  } catch (e) {\n    // Either SDK or Node versions were unparsable\n    return 'E';\n  }\n}\n/**\n * @private\n * @description Removes patch version from the semver if it exists\n *              Turns x.y.z OR x.y into x.y\n * @param {'x.y.z' | 'x.y' | string} semVerStr\n */\nfunction removePatchFromSemver(semVerStr) {\n  const parts = semVerStr.split('.');\n  return `${parts[0]}.${parts[1]}`;\n}","import { getUrlPrefix, getUrlVersion, handleAssetType, handleDeliveryType } from \"../internal/url/cloudinaryURL.js\";\nimport URLConfig from \"../config/URLConfig.js\";\nimport { getSDKAnalyticsSignature } from \"../sdkAnalytics/getSDKAnalyticsSignature.js\";\n/**\n * This const contains all the valid combination of asset/delivery for URL shortening purposes\n * It's exported because it's used in a test, but it's not really shared enough to belong in a separate file\n */\nexport const SEO_TYPES = {\n  \"image/upload\": \"images\",\n  \"image/private\": \"private_images\",\n  \"image/authenticated\": \"authenticated_images\",\n  \"raw/upload\": \"files\",\n  \"video/upload\": \"videos\"\n};\n/**\n * @description Cloudinary file without a transformation\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryFile {\n  constructor(publicID, cloudConfig = {}, urlConfig) {\n    this.setPublicID(publicID);\n    this.setCloudConfig(cloudConfig);\n    this.setURLConfig(urlConfig);\n  }\n  /**\n   * @description Sets the URL Config for this asset\n   * @param urlConfig\n   * @return {this}\n   */\n  setURLConfig(urlConfig) {\n    this.urlConfig = new URLConfig(urlConfig);\n    return this;\n  }\n  /**\n   * @description Sets the Cloud Config for this asset\n   * @param urlConfig\n   * @return {this}\n   */\n  setCloudConfig(cloudConfig) {\n    this.cloudName = cloudConfig.cloudName;\n    this.apiKey = cloudConfig.apiKey;\n    this.apiSecret = cloudConfig.apiSecret;\n    this.authToken = cloudConfig.authToken;\n    return this;\n  }\n  /**\n   * @description Sets the public ID of the asset.\n   * @param {string} publicID The public ID of the asset.\n   * @return {this}\n   */\n  setPublicID(publicID) {\n    // PublicID must be a string!\n    this.publicID = publicID ? publicID.toString() : '';\n    return this;\n  }\n  /**\n   * @description Sets the delivery type of the asset.\n   * @param {DELIVERY_TYPE | string} newType The type of the asset.\n   * @return {this}\n   */\n  setDeliveryType(newType) {\n    this.deliveryType = newType;\n    return this;\n  }\n  /**\n   * @description Sets the URL SEO suffix of the asset.\n   * @param {string} newSuffix The SEO suffix.\n   * @return {this}\n   */\n  setSuffix(newSuffix) {\n    this.suffix = newSuffix;\n    return this;\n  }\n  /**\n   * @description Sets the signature of the asset.\n   * @param {string} signature The signature.\n   * @return {this}\n   */\n  setSignature(signature) {\n    this.signature = signature;\n    return this;\n  }\n  /**\n   * @description Sets the version of the asset.\n   * @param {string} newVersion The version of the asset.\n   * @return {this}\n   */\n  setVersion(newVersion) {\n    if (newVersion) {\n      this.version = newVersion;\n    }\n    return this;\n  }\n  /**\n   * @description Sets the asset type.\n   * @param {string} newType The type of the asset.\n   * @return {this}\n   */\n  setAssetType(newType) {\n    if (newType) {\n      this.assetType = newType;\n    }\n    return this;\n  }\n  sign() {\n    return this;\n  }\n  /**\n   * @description Serializes to URL string\n   * @param overwriteOptions\n   */\n  toURL(overwriteOptions = {}) {\n    return this.createCloudinaryURL(null, overwriteOptions.trackedAnalytics);\n  }\n  /**\n   * @description Validate various options before attempting to create a URL\n   * The function will throw in case a violation\n   * @throws Validation errors\n   */\n  validateAssetForURLCreation() {\n    if (typeof this.cloudName === 'undefined') {\n      throw 'You must supply a cloudName when initializing the asset';\n    }\n    const suffixContainsDot = this.suffix && this.suffix.indexOf('.') >= 0;\n    const suffixContainsSlash = this.suffix && this.suffix.indexOf('/') >= 0;\n    if (suffixContainsDot || suffixContainsSlash) {\n      throw '`suffix`` should not include . or /';\n    }\n  }\n  /**\n   * @description return an SEO friendly name for a combination of asset/delivery, some examples:\n   * * image/upload -> images\n   * * video/upload -> videos\n   * If no match is found, return `{asset}/{delivery}`\n   */\n  getResourceType() {\n    const assetType = handleAssetType(this.assetType);\n    const deliveryType = handleDeliveryType(this.deliveryType);\n    const hasSuffix = !!this.suffix;\n    const regularSEOType = `${assetType}/${deliveryType}`;\n    const shortSEOType = SEO_TYPES[`${assetType}/${deliveryType}`];\n    const useRootPath = this.urlConfig.useRootPath;\n    const shorten = this.urlConfig.shorten;\n    // Quick exit incase of useRootPath\n    if (useRootPath) {\n      if (regularSEOType === 'image/upload') {\n        return ''; // For image/upload we're done, just return nothing\n      } else {\n        throw new Error(`useRootPath can only be used with assetType: 'image' and deliveryType: 'upload'. Provided: ${regularSEOType} instead`);\n      }\n    }\n    if (shorten && regularSEOType === 'image/upload') {\n      return 'iu';\n    }\n    if (hasSuffix) {\n      if (shortSEOType) {\n        return shortSEOType;\n      } else {\n        throw new Error(`URL Suffix only supported for ${Object.keys(SEO_TYPES).join(', ')}, Provided: ${regularSEOType} instead`);\n      }\n    }\n    // If all else fails, return the regular image/upload combination (asset/delivery)\n    return regularSEOType;\n  }\n  getSignature() {\n    if (this.signature) {\n      return `s--${this.signature}--`;\n    } else {\n      return '';\n    }\n  }\n  /**\n   *\n   * @description Creates a fully qualified CloudinaryURL\n   * @return {string} CloudinaryURL\n   * @throws Validation Errors\n   */\n  createCloudinaryURL(transformation, trackedAnalytics) {\n    // In accordance with the existing implementation, if no publicID exists we should return nothing.\n    if (!this.publicID) {\n      return '';\n    }\n    // Throws if some options are mis-configured\n    // See the function for more information on when it throws\n    this.validateAssetForURLCreation();\n    const prefix = getUrlPrefix(this.cloudName, this.urlConfig);\n    const transformationString = transformation ? transformation.toString() : '';\n    const version = getUrlVersion(this.publicID, this.version, this.urlConfig.forceVersion);\n    const publicID = this.publicID;\n    if (typeof transformation === 'string') {\n      const url = [prefix, this.getResourceType(), this.getSignature(), transformationString, version, publicID.replace(/,/g, '%2C'), this.suffix].filter(a => a).join('/');\n      return url;\n    } else {\n      // Avoid applying encodeURI on entire string in case where we have transformations with comma (i.e. f_auto,q_auto)\n      // Since encodeURI does not encode commas we replace commas *only* on the publicID\n      const safeURL = [encodeURI(prefix), this.getResourceType(), this.getSignature(), encodeURI(transformationString), version, encodeURI(publicID).replace(/,/g, '%2C'), this.suffix && encodeURI(this.suffix)].filter(a => a).join('/').replace(/\\?/g, '%3F').replace(/=/g, '%3D');\n      const shouldAddAnalytics = this.urlConfig.analytics !== false && !publicID.includes('?');\n      let queryParamsString = '';\n      if (typeof this.urlConfig.queryParams === 'object') {\n        try {\n          const queryParams = new URLSearchParams(this.urlConfig.queryParams);\n          if (shouldAddAnalytics) {\n            queryParams.set(\"_a\", getSDKAnalyticsSignature(trackedAnalytics));\n          }\n          queryParamsString = queryParams.toString();\n        } catch (err) {\n          console.error('Error: URLSearchParams is not available so the queryParams object cannot be parsed, please try passing as an already parsed string');\n        }\n      } else {\n        queryParamsString = this.urlConfig.queryParams || '';\n        if (shouldAddAnalytics) {\n          queryParamsString += `${queryParamsString.length > 0 ? '&' : ''}_a=${getSDKAnalyticsSignature(trackedAnalytics)}`;\n        }\n      }\n      if (queryParamsString) {\n        return `${safeURL}?${queryParamsString}`;\n      } else {\n        return safeURL;\n      }\n    }\n  }\n}\nexport { CloudinaryFile };","import { CloudinaryFile } from \"./CloudinaryFile.js\";\nimport { DeliveryFormatAction } from \"@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction\";\n/**\n * @desc Cloudinary Transformable interface, extended by any class that needs a Transformation Interface\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryTransformable extends CloudinaryFile {\n  constructor(publicID, cloudConfig, urlConfig, transformation) {\n    /* istanbul ignore next */\n    super(publicID, cloudConfig, urlConfig);\n    this.transformation = transformation;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Animated} animated\n   * @return {this}\n   */\n  animated(animated) {\n    this.transformation.animated(animated);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Border} border\n   * @return {this}\n   */\n  border(border) {\n    this.transformation.border(border);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Reshape} reshape\n   * @return {this}\n   */\n  reshape(reshape) {\n    this.transformation.reshape(reshape);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Resize} resize\n   * @return {this}\n   */\n  resize(resize) {\n    this.transformation.resize(resize);\n    return this;\n  }\n  /**\n   * @desc An alias to Action Delivery.quality\n   * @param {string|number} quality\n   * @return {this}\n   */\n  quality(quality) {\n    this.addAction(new DeliveryFormatAction('q', quality));\n    return this;\n  }\n  /**\n   * @desc An alias to Action Delivery.format\n   * @param {string} format\n   * @return {this}\n   */\n  format(format) {\n    this.addAction(new DeliveryFormatAction('f', format));\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.RoundCorners} roundCorners\n   * @return {this}\n   */\n  roundCorners(roundCorners) {\n    this.transformation.roundCorners(roundCorners);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @return {this}\n   */\n  overlay(overlayAction) {\n    this.transformation.overlay(overlayAction);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Variable} variableAction\n   * @return {this}\n   */\n  addVariable(variableAction) {\n    this.transformation.addVariable(variableAction);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Condition} conditionalAction\n   * @return {this}\n   */\n  conditional(conditionalAction) {\n    this.transformation.conditional(conditionalAction);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Effect} effect\n   * @return {this}\n   */\n  effect(effect) {\n    this.transformation.effect(effect);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Adjust} action\n   * @return {this}\n   */\n  adjust(action) {\n    this.transformation.adjust(action);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Rotate} rotate\n   * @return {this}\n   */\n  rotate(rotate) {\n    this.transformation.rotate(rotate);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.NamedTransformation} namedTransformation\n   * @return {this}\n   */\n  namedTransformation(namedTransformation) {\n    this.transformation.namedTransformation(namedTransformation);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Delivery} deliveryAction\n   * @return {this}\n   */\n  delivery(deliveryAction) {\n    this.transformation.delivery(deliveryAction);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Qualifiers.color} color\n   * @return {this}\n   */\n  backgroundColor(color) {\n    this.transformation.backgroundColor(color);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.PSDTools} action\n   * @return {this}\n   */\n  psdTools(action) {\n    this.transformation.psdTools(action);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Extract} action\n   * @return {this}\n   */\n  extract(action) {\n    this.transformation.extract(action);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Qualifiers.Flag | string} flagQualifier\n   * @return {this}\n   */\n  addFlag(flagQualifier) {\n    this.transformation.addFlag(flagQualifier);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.CustomFunction} customFunction\n   * @return {this}\n   */\n  customFunction(customFunction) {\n    this.transformation.customFunction(customFunction);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {SDK.Action | string} action\n   * @return {this}\n   */\n  addAction(action) {\n    this.transformation.addAction(action);\n    return this;\n  }\n  /**\n   * @description Extend your transformation with another transformation\n   * @param { string | SDK.Transformation } tx\n   */\n  addTransformation(tx) {\n    this.transformation.addTransformation(tx);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @return {string}\n   */\n  toString() {\n    return this.transformation.toString();\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @return {this}\n   */\n  underlay(underlayAction) {\n    this.transformation.underlay(underlayAction);\n    return this;\n  }\n  toURL(overwriteOptions = {}) {\n    return this.createCloudinaryURL(this.transformation, overwriteOptions === null || overwriteOptions === void 0 ? void 0 : overwriteOptions.trackedAnalytics);\n  }\n}\nexport { CloudinaryTransformable };","import { ImageTransformation } from \"@cloudinary/transformation-builder-sdk/transformation/ImageTransformation\";\nimport { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\n/**\n * @desc Cloudinary image asset, with image-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryImage extends CloudinaryTransformable {\n  constructor(publicID, cloudConfig, urlConfig) {\n    /* istanbul ignore next */\n    super(publicID, cloudConfig, urlConfig, new ImageTransformation());\n  }\n}\nexport { CloudinaryImage };","import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\nimport { VideoTransformation } from \"../transformation/VideoTransformation.js\";\n/**\n * @desc Cloudinary video asset, with video-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryVideo extends CloudinaryTransformable {\n  constructor(publicID, cloudConfig, urlConfig) {\n    /* istanbul ignore next */\n    super(publicID, cloudConfig, urlConfig, new VideoTransformation());\n    this.assetType = 'video';\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Transcode} action\n   * @return {this}\n   */\n  transcode(action) {\n    this.transformation.transcode(action);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.VideoEdit} action\n   * @return {this}\n   */\n  videoEdit(action) {\n    this.transformation.videoEdit(action);\n    return this;\n  }\n}\nexport { CloudinaryVideo };","import { CloudinaryImage } from \"../assets/CloudinaryImage.js\";\nimport { CloudinaryVideo } from \"../assets/CloudinaryVideo.js\";\nclass Cloudinary {\n  constructor(cloudinaryConfig) {\n    if (cloudinaryConfig) {\n      this.cloudinaryConfig = cloudinaryConfig;\n    }\n  }\n  image(publicID) {\n    return new CloudinaryImage(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n  }\n  video(publicID) {\n    return new CloudinaryVideo(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n  }\n  setConfig(cloudinaryConfig) {\n    this.cloudinaryConfig = cloudinaryConfig;\n    return this;\n  }\n  getConfig() {\n    return this.cloudinaryConfig;\n  }\n  extendConfig() {\n    // Future implementation\n  }\n}\nexport { Cloudinary };","import {Injectable} from '@angular/core';\r\n\r\n\r\n// Import the CloudinaryModule.\r\n\r\n// Import the Cloudinary classes.\r\nimport {Cloudinary, CloudinaryImage} from '@cloudinary/url-gen';\r\nimport {name} from \"@cloudinary/url-gen/actions/namedTransformation\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CloudinaryService {\r\n\r\n  constructor() { }\r\n  // Create a new Cloudinary instance.\r\n  cld = new Cloudinary({\r\n    cloud: {\r\n      cloudName: 'dflz0gveu'\r\n    }\r\n  });\r\n  // Create a new CloudinaryImage instance.\r\n  getImage(publicId: string, transformation?:string): CloudinaryImage {\r\n    const img = this.cld.image(publicId);\r\n\r\n    if (transformation)\r\n      img.namedTransformation(name(transformation));\r\n\r\n    return img;\r\n  }\r\n}\r\n"],"mappings":"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","names":["lossy","progressive","preserveTransparency","name","name","num"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}