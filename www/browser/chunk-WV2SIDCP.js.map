{
  "version": 3,
  "sources": ["src/app/Screen/new-post/new-post.component.ts", "src/app/Screen/new-post/new-post.component.html"],
  "sourcesContent": ["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { IonicModule, ModalController, ToastController } from \"@ionic/angular\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { addIcons } from \"ionicons\";\r\nimport { send, close, folderOutline } from \"ionicons/icons\";\r\nimport { PostService } from '../../Service/Post.service';\r\nimport { NgIf } from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-new-post',\r\n    templateUrl: './new-post.component.html',\r\n    styleUrls: ['./new-post.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        IonicModule,\r\n        FormsModule,\r\n        NgIf,\r\n    ]\r\n})\r\nexport class NewPostComponent implements OnInit {\r\n    @ViewChild('fileInput', { static: false }) fileInput!: ElementRef<HTMLInputElement>;\r\n    postContent: string = '';\r\n    selectedFile: File | null = null;\r\n    fileName: string = ''; // Para guardar el nombre del archivo\r\n    imageSelected: boolean = false;\r\n\r\n    constructor(\r\n        private modalController: ModalController,\r\n        private postService: PostService,\r\n        private toastController: ToastController // Add ToastController\r\n    ) {\r\n        addIcons({ close, send, folderOutline });\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    dismiss() {\r\n        this.modalController.dismiss();\r\n    }\r\n\r\n    async submitPost() {\r\n        if (!this.imageSelected) {\r\n            const toast = await this.toastController.create({\r\n                message: 'Es obligatorio aÃ±adir una imagen.',\r\n                color: 'danger',\r\n                duration: 2000,\r\n                position: 'top',\r\n                cssClass: 'custom-toast'\r\n            });\r\n            await toast.present();\r\n            return;\r\n        }\r\n\r\n        const token = sessionStorage.getItem('token');\r\n        if (!token) {\r\n            console.error('No token found in cookies');\r\n            return;\r\n        }\r\n\r\n        const newPost = {\r\n            content: this.postContent,\r\n            delete: false,\r\n        };\r\n\r\n        const formData = new FormData();\r\n        formData.append('post', JSON.stringify(newPost));\r\n\r\n        if (this.selectedFile) {\r\n            formData.append('file', this.selectedFile);\r\n        }\r\n\r\n        console.log('Creating post with file:', newPost);\r\n        console.log('Token:', token);\r\n\r\n        this.postService.createPost(token, formData).subscribe(\r\n            (response) => {\r\n                console.log('Post created successfully:', response);\r\n                this.dismiss();\r\n                window.location.reload();\r\n            },\r\n            (error) => {\r\n                console.error('Error creating post:', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    triggerFileInput() {\r\n        console.log('triggerFileInput llamado');\r\n        if (this.fileInput && this.fileInput.nativeElement) {\r\n            this.fileInput.nativeElement.click();\r\n        } else {\r\n            console.error('Elemento fileInput no encontrado');\r\n        }\r\n    }\r\n\r\n    onFileChange(event: Event) {\r\n        const input = event.target as HTMLInputElement;\r\n        if (input.files && input.files.length > 0) {\r\n            this.selectedFile = input.files[0];\r\n            this.fileName = this.selectedFile.name;\r\n            this.imageSelected = true; // Set flag to true when an image is selected\r\n            console.log('Archivo seleccionado:', this.fileName);\r\n        }\r\n    }\r\n}\r\n", "<ion-header>\r\n    <ion-toolbar>\r\n        <ion-title>Â¿QuÃ© estÃ¡s pensando hoy?ðŸ¤”ðŸ¤”</ion-title>\r\n        <ion-buttons slot=\"end\">\r\n            <ion-button (click)=\"dismiss()\">\r\n                <ion-icon name=\"close\" class=\"send-icon\"></ion-icon>\r\n            </ion-button>\r\n        </ion-buttons>\r\n    </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n    <form (ngSubmit)=\"submitPost()\" class=\"centered-form\">\r\n        <ion-item>\r\n            <ion-label position=\"floating\">Comparte</ion-label>\r\n            <ion-textarea class=\"textArea\" [(ngModel)]=\"postContent\" name=\"content\" required></ion-textarea>\r\n        </ion-item>\r\n        <ion-item class=\"centered-button separated-item\">\r\n            <button class=\"add-file-button\" (click)=\"triggerFileInput()\" type=\"button\">\r\n                <ion-icon class=\"folder-icon\" name=\"folder-outline\"></ion-icon>\r\n                AÃ±adir archivo\r\n            </button>\r\n            <!-- Input de archivo oculto -->\r\n            <input type=\"file\" name=\"file\" (change)=\"onFileChange($event)\" hidden #fileInput />\r\n        </ion-item>\r\n        <!-- Mostrar el nombre del archivo seleccionado -->\r\n        <p *ngIf=\"fileName\" class=\"file-name\">\r\n            Archivo seleccionado: {{ fileName }}\r\n        </p>\r\n\r\n        <button class=\"separated-item2\" type=\"submit\">\r\n            <div class=\"svg-wrapper-1\">\r\n                <div class=\"svg-wrapper\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                        <path fill=\"currentColor\"\r\n                              d=\"M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z\">\r\n                        </path>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <span>Publicar</span>\r\n        </button>\r\n    </form>\r\n</ion-content>\r\n"],
  "mappings": "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",
  "names": []
}
