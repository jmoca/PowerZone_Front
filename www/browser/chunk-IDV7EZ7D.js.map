{
  "version": 3,
  "sources": ["src/app/Service/profile-settings.service.ts"],
  "sourcesContent": ["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ProfileSetting} from \"../Models/ProfileSetting\";\r\nimport {environment} from \"../../environments/environment.prod\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProfileSettingsService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getData(token: string): Observable<ProfileSetting> {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return this.httpClient.post<ProfileSetting>(environment.apiUrl + '/profile/getData', {}, { headers });\r\n    }\r\n\r\n    updateProfile(token: string, profile: ProfileSetting): Observable<any> {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return this.httpClient.post(environment.apiUrl + '/profile/updateData', profile, { headers });\r\n    }\r\n\r\n    getProfileById(id: string) {\r\n        return this.httpClient.get<ProfileSetting>(environment.apiUrl + `/profile/${id}`);\r\n    }\r\n    followUser(token: string, userId: number, followUserId: number): Observable<string> {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return this.httpClient.post<string>(environment.apiUrl + `/profile/${userId}/follow/${followUserId}`, {}, { headers });\r\n    }\r\n\r\n    unfollowUser(token: string, userId: number, unfollowUserId: number): Observable<string> {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return this.httpClient.post<string>(environment.apiUrl + `/profile/${userId}/unfollow/${unfollowUserId}`, {}, { headers });\r\n    }\r\n\r\n    isFollowing(token: string, userId: number, followUserId: number): Observable<boolean> {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return this.httpClient.get<boolean>(environment.apiUrl + `/profile/${userId}/isFollowing/${followUserId}`, { headers });\r\n    }\r\n\r\n\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;AASM,IAAO,0BAAP,MAAO,wBAAsB;EAE/B,YAAoB,YAAsB;AAAtB,SAAA,aAAA;EAA0B;EAE9C,QAAQ,OAAa;AACjB,UAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AACxE,WAAO,KAAK,WAAW,KAAqB,YAAY,SAAS,oBAAoB,CAAA,GAAI,EAAE,QAAO,CAAE;EACxG;EAEA,cAAc,OAAe,SAAuB;AAChD,UAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AACxE,WAAO,KAAK,WAAW,KAAK,YAAY,SAAS,uBAAuB,SAAS,EAAE,QAAO,CAAE;EAChG;EAEA,eAAe,IAAU;AACrB,WAAO,KAAK,WAAW,IAAoB,YAAY,SAAS,YAAY,EAAE,EAAE;EACpF;EACA,WAAW,OAAe,QAAgB,cAAoB;AAC1D,UAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AACxE,WAAO,KAAK,WAAW,KAAa,YAAY,SAAS,YAAY,MAAM,WAAW,YAAY,IAAI,CAAA,GAAI,EAAE,QAAO,CAAE;EACzH;EAEA,aAAa,OAAe,QAAgB,gBAAsB;AAC9D,UAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AACxE,WAAO,KAAK,WAAW,KAAa,YAAY,SAAS,YAAY,MAAM,aAAa,cAAc,IAAI,CAAA,GAAI,EAAE,QAAO,CAAE;EAC7H;EAEA,YAAY,OAAe,QAAgB,cAAoB;AAC3D,UAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AACxE,WAAO,KAAK,WAAW,IAAa,YAAY,SAAS,YAAY,MAAM,gBAAgB,YAAY,IAAI,EAAE,QAAO,CAAE;EAC1H;;;mCA9BS,yBAAsB,mBAAA,UAAA,CAAA;AAAA;2FAAtB,yBAAsB,SAAtB,wBAAsB,WAAA,YAFnB,OAAM,CAAA;AAEhB,IAAO,yBAAP;",
  "names": []
}
