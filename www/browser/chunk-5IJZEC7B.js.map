{
  "version": 3,
  "sources": ["src/app/Service/Menu.service.ts", "src/app/Screen/menuoriginal/menuoriginal.component.ts", "src/app/Screen/menuoriginal/menuoriginal.component.html"],
  "sourcesContent": ["import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Menu {\r\n    private useAlternateMenuSubject = new BehaviorSubject<boolean>(false);\r\n    useAlternateMenu$ = this.useAlternateMenuSubject.asObservable();\r\n\r\n    toggleMenu() {\r\n        this.useAlternateMenuSubject.next(true);\r\n    }\r\n}\r\n", "import {Component, OnInit} from '@angular/core';\r\nimport {IonicModule, ModalController, ModalOptions} from \"@ionic/angular\";\r\nimport {addIcons} from \"ionicons\";\r\nimport {\r\n    add,\r\n    closeCircle,\r\n    home,\r\n    logInOutline,\r\n    logoIonitron,\r\n    notifications,\r\n    paperPlaneOutline,\r\n    personCircleOutline,\r\n    restaurant,\r\n    search,\r\n    settingsSharp\r\n} from \"ionicons/icons\";\r\nimport {Router} from \"@angular/router\";\r\nimport {NewPostComponent} from \"../new-post/new-post.component\";\r\nimport {Menu} from \"../../Service/Menu.service\";\r\nimport {ProfileSetting} from \"../../Models/ProfileSetting\";\r\nimport {ProfileSettingsService} from \"../../Service/profile-settings.service\";\r\n\r\n@Component({\r\n    selector: 'app-menuoriginal',\r\n    templateUrl: './menuoriginal.component.html',\r\n    styleUrls: ['./menuoriginal.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        IonicModule,\r\n    ]\r\n})\r\nexport class MenuoriginalComponent implements OnInit {\r\n\r\n    profile: ProfileSetting = {\r\n        nickName: '',\r\n        name: '',\r\n        email: '',\r\n        bornDate: '',\r\n        avatar: '',\r\n        id: 0\r\n    };\r\n\r\n    constructor(private modalController: ModalController,\r\n                private router: Router,\r\n                private menuService: Menu,\r\n                private profileSettings: ProfileSettingsService) {\r\n        addIcons({\r\n            home,\r\n            search,\r\n            add,\r\n            restaurant,\r\n            notifications,\r\n            closeCircle,\r\n            personCircleOutline,\r\n            settingsSharp,\r\n            logInOutline,\r\n            paperPlaneOutline,\r\n            logoIonitron\r\n\r\n        });\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.menuService.toggleMenu();\r\n    }\r\n\r\n    async openAddPostModal() {\r\n        const modal = await this.modalController.create({\r\n            component: NewPostComponent\r\n        } as ModalOptions);\r\n        await modal.present();\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = sessionStorage.getItem('token');\r\n        if (token) {\r\n            this.profileSettings.getData(token).subscribe((data: ProfileSetting) => {\r\n                this.profile = data;\r\n            });\r\n        } else {\r\n            console.error('Token is null');\r\n        }\r\n    }\r\n\r\n\r\n    navigateTo(path: string) {\r\n        this.router.navigate([path]);\r\n    }\r\n\r\n    LogOut() {\r\n        sessionStorage.removeItem('token');\r\n        this.router.navigate(['/login']);\r\n    }\r\n}\r\n", "<body>\r\n\r\n<ion-grid>\r\n    <ion-row>\r\n        <ion-col>\r\n            <ion-list>\r\n                <ion-item lines=\"none\" (click)=\"navigateTo('/posts')\" >\r\n                    <ion-icon aria-hidden=\"true\" name=\"home\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Inicio</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" (click)=\"toggleMenu()\" id=\"busqueda\">\r\n                    <ion-icon aria-hidden=\"true\" name=\"search\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Busqueda</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" id=\"publicar2\">\r\n                    <ion-icon aria-hidden=\"true\" name=\"add\" slot=\"start\" ></ion-icon>\r\n                    <ion-label (click)=\"openAddPostModal()\" >Publicar</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" (click)=\"navigateTo('/mensajes')\" id=\"mensajes\">\r\n                    <ion-icon name=\"paper-plane-outline\" aria-hidden=\"true\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Mensajes</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" (click)=\"navigateTo('/health')\" id=\"chatbot\">\r\n                  <ion-icon name=\"logo-ionitron\" aria-hidden=\"true\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Chatbot</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" (click)=\"navigateTo('/notification')\" id=\"notificaciones\" >\r\n                    <ion-icon aria-hidden=\"true\" name=\"notifications\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Notificaciones</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" (click)=\"navigateTo('/profile')\" id=\"perfil\">\r\n                    <ion-icon aria-hidden=\"true\" name=\"person-circle-outline\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Perfil</ion-label>\r\n                </ion-item>\r\n                <ion-item lines=\"none\" (click)=\"LogOut()\" id=\"cerrar-sesion\">\r\n                    <ion-icon aria-hidden=\"true\" name=\"log-in-outline\" slot=\"start\"></ion-icon>\r\n                    <ion-label>Cerrar Sesi√≥n</ion-label>\r\n                </ion-item>\r\n            </ion-list>\r\n        </ion-col>\r\n    </ion-row>\r\n</ion-grid>\r\n\r\n</body>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMM,IAAO,QAAP,MAAO,MAAI;EAHjB,cAAA;AAIY,SAAA,0BAA0B,IAAI,gBAAyB,KAAK;AACpE,SAAA,oBAAoB,KAAK,wBAAwB,aAAY;;EAE7D,aAAU;AACN,SAAK,wBAAwB,KAAK,IAAI;EAC1C;;;mCANS,OAAI;AAAA;yEAAJ,OAAI,SAAJ,MAAI,WAAA,YAFD,OAAM,CAAA;AAEhB,IAAO,OAAP;;;ACyBA,IAAO,yBAAP,MAAO,uBAAqB;EAW9B,YAAoB,iBACA,QACA,aACA,iBAAuC;AAHvC,SAAA,kBAAA;AACA,SAAA,SAAA;AACA,SAAA,cAAA;AACA,SAAA,kBAAA;AAZpB,SAAA,UAA0B;MACtB,UAAU;MACV,MAAM;MACN,OAAO;MACP,UAAU;MACV,QAAQ;MACR,IAAI;;AAOJ,aAAS;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KAEH;EACL;EAEA,aAAU;AACN,SAAK,YAAY,WAAU;EAC/B;EAEM,mBAAgB;;AAClB,YAAM,QAAQ,MAAM,KAAK,gBAAgB,OAAO;QAC5C,WAAW;OACE;AACjB,YAAM,MAAM,QAAO;IACvB;;EAEA,WAAQ;AACJ,UAAM,QAAQ,eAAe,QAAQ,OAAO;AAC5C,QAAI,OAAO;AACP,WAAK,gBAAgB,QAAQ,KAAK,EAAE,UAAU,CAAC,SAAwB;AACnE,aAAK,UAAU;MACnB,CAAC;IACL,OAAO;AACH,cAAQ,MAAM,eAAe;IACjC;EACJ;EAGA,WAAW,MAAY;AACnB,SAAK,OAAO,SAAS,CAAC,IAAI,CAAC;EAC/B;EAEA,SAAM;AACF,mBAAe,WAAW,OAAO;AACjC,SAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;EACnC;;;mCA7DS,wBAAqB,4BAAA,eAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,IAAA,GAAA,4BAAA,sBAAA,CAAA;AAAA;uFAArB,wBAAqB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,eAAA,QAAA,QAAA,QAAA,QAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,YAAA,GAAA,OAAA,GAAA,CAAA,eAAA,QAAA,QAAA,UAAA,QAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,WAAA,GAAA,CAAA,eAAA,QAAA,QAAA,OAAA,QAAA,OAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,YAAA,GAAA,OAAA,GAAA,CAAA,QAAA,uBAAA,eAAA,QAAA,QAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,WAAA,GAAA,OAAA,GAAA,CAAA,QAAA,iBAAA,eAAA,QAAA,QAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,kBAAA,GAAA,OAAA,GAAA,CAAA,eAAA,QAAA,QAAA,iBAAA,QAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,UAAA,GAAA,OAAA,GAAA,CAAA,eAAA,QAAA,QAAA,yBAAA,QAAA,OAAA,GAAA,CAAA,SAAA,QAAA,MAAA,iBAAA,GAAA,OAAA,GAAA,CAAA,eAAA,QAAA,QAAA,kBAAA,QAAA,OAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AC/BlC,IAAA,yBAAA,GAAA,MAAA,EAAM,GAAA,UAAA,EAEI,GAAA,SAAA,EACG,GAAA,SAAA,EACI,GAAA,UAAA,EACK,GAAA,YAAA,CAAA;AACiB,IAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,aAAS,IAAA,WAAW,QAAQ;IAAC,CAAA;AAChD,IAAA,oBAAA,GAAA,YAAA,CAAA;AACA,IAAA,yBAAA,GAAA,WAAA;AAAW,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA,EAAY;AAEjC,IAAA,yBAAA,GAAA,YAAA,CAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AACxC,IAAA,oBAAA,IAAA,YAAA,CAAA;AACA,IAAA,yBAAA,IAAA,WAAA;AAAW,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAY;AAEnC,IAAA,yBAAA,IAAA,YAAA,CAAA;AACI,IAAA,oBAAA,IAAA,YAAA,CAAA;AACA,IAAA,yBAAA,IAAA,aAAA,CAAA;AAAW,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,aAAS,IAAA,iBAAA;IAAkB,CAAA;AAAG,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAY;AAEjE,IAAA,yBAAA,IAAA,YAAA,CAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,aAAS,IAAA,WAAW,WAAW;IAAC,CAAA;AACnD,IAAA,oBAAA,IAAA,YAAA,CAAA;AACA,IAAA,yBAAA,IAAA,WAAA;AAAW,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAY;AAEnC,IAAA,yBAAA,IAAA,YAAA,CAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,aAAS,IAAA,WAAW,SAAS;IAAC,CAAA;AACnD,IAAA,oBAAA,IAAA,YAAA,EAAA;AACE,IAAA,yBAAA,IAAA,WAAA;AAAW,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA,EAAY;AAElC,IAAA,yBAAA,IAAA,YAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,aAAS,IAAA,WAAW,eAAe;IAAC,CAAA;AACvD,IAAA,oBAAA,IAAA,YAAA,EAAA;AACA,IAAA,yBAAA,IAAA,WAAA;AAAW,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA,EAAY;AAEzC,IAAA,yBAAA,IAAA,YAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,aAAS,IAAA,WAAW,UAAU;IAAC,CAAA;AAClD,IAAA,oBAAA,IAAA,YAAA,EAAA;AACA,IAAA,yBAAA,IAAA,WAAA;AAAW,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA,EAAY;AAEjC,IAAA,yBAAA,IAAA,YAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,aAAS,IAAA,OAAA;IAAQ,CAAA;AACpC,IAAA,oBAAA,IAAA,YAAA,EAAA;AACA,IAAA,yBAAA,IAAA,WAAA;AAAW,IAAA,iBAAA,IAAA,kBAAA;AAAa,IAAA,uBAAA,EAAY,EAC7B,EACJ,EACL,EACJ,EACH;;kBDbH,aAAW,QAAA,SAAA,SAAA,SAAA,UAAA,SAAA,MAAA,GAAA,QAAA,CAAA,6bAAA,EAAA,CAAA;AAGb,IAAO,wBAAP;;6EAAO,uBAAqB,EAAA,WAAA,yBAAA,UAAA,yDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
