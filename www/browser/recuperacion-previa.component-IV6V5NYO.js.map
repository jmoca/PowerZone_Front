{
  "version": 3,
  "sources": ["src/app/Service/recuperacion-service.service.ts", "src/app/Screen/recuperacion-previa/recuperacion-previa.component.ts", "src/app/Screen/recuperacion-previa/recuperacion-previa.component.html"],
  "sourcesContent": ["import {Injectable} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment.prod\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecuperacionServiceService {\r\n    private baseUrl = '/api/api/auth'; // Proxy configurado\r\n  constructor(private http: HttpClient) { }\r\n\r\n    sendEmail(email: string): Observable<any> {\r\n        return this.http.post<any>(environment.apiUrl + `/api/auth/forgot-password?email=${email}`, null);\r\n    }\r\n\r\n    sendNewPassword(code: string, newPassword:string): Observable<any> {\r\n        return this.http.post<any>(environment.apiUrl + `/api/auth/reset-password?code=${code}&newPassword=${newPassword}`, null);\r\n    }\r\n}\r\n", "import {Component, OnInit} from '@angular/core';\r\nimport {CarrouselComponent} from \"../../Component/carrousel/carrousel.component\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {IonicModule} from \"@ionic/angular\";\r\nimport {NgIf} from \"@angular/common\";\r\nimport {Router, RouterLink} from \"@angular/router\";\r\nimport {RecuperacionServiceService} from \"../../Service/recuperacion-service.service\";\r\n\r\n@Component({\r\n    selector: 'app-recuperacion-previa',\r\n    templateUrl: './recuperacion-previa.component.html',\r\n    styleUrls: ['./recuperacion-previa.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        CarrouselComponent,\r\n        FormsModule,\r\n        IonicModule,\r\n        NgIf,\r\n        RouterLink\r\n    ]\r\n})\r\nexport class RecuperacionPreviaComponent  implements OnInit {\r\n    email:string= \"\";\r\n    hecho:boolean = false;\r\n    password:string= \"\";\r\n    passwordConfident:string= \"\";\r\n    code:string=\"\";\r\n\r\n    constructor(private recu:RecuperacionServiceService, private router:Router) { }\r\n\r\n    ngOnInit() {}\r\n\r\n    sendEmail() {\r\n        this.recu.sendEmail(this.email).subscribe({\r\n            next: (data) => {\r\n\r\n            },\r\n            error: (err) => {\r\n                console.error('Error al enviar el email', err);\r\n            },\r\n            complete: () => {\r\n                this.hecho = true\r\n            }\r\n        });\r\n        this.hecho = true\r\n    }\r\n\r\n    sendNewPassword(){\r\n        this.recu.sendNewPassword(this.code, this.password).subscribe({\r\n            next: () => {\r\n                console.log(\"Hola\")\r\n            },\r\n            error: (err) => {\r\n                console.error('Error al enviar el email', err);\r\n            },\r\n        })\r\n        this.router.navigate(['/login']);\r\n\r\n    }\r\n}\r\n", "<ion-content class=\"Registrobody\" style=\"height: 100%\">\r\n    <ion-grid class=\"ion-no-padding\">\r\n        <ion-row>\r\n            <!--En esta columna es donde va la foto de los moviles-->\r\n            <ion-col class=\"Registrobody\">\r\n                <div id=\"onichan\">\r\n                    <img src=\"../../../assets/img/marco2.png\" class=\"overlay-image\">\r\n                    <div id=\"onichan2\">\r\n                        <app-carrousel></app-carrousel>\r\n                    </div>\r\n                </div>\r\n            </ion-col>\r\n            <!--En este es donde está el formulario de registro-->\r\n            <ion-col size-lg=\"6\" size-xs=\"12\" class=\"Registrobody\">\r\n                <div class=\"subForm\">\r\n                    <ion-img src=\"assets/logo.png\" id=\"logo\"></ion-img>\r\n                    <ion-item *ngIf=\"!hecho\">\r\n                        <ion-input [(ngModel)]=\"email\" label=\"Introduce tu email\" placeholder=\"Introduce tu email\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-item *ngIf=\"hecho\">\r\n                        <ion-input [(ngModel)]=\"code\" label=\"Codigo enviado a email\" placeholder=\"Introduce el codigo\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-item *ngIf=\"hecho\">\r\n                        <ion-input [(ngModel)]=\"password\" type=\"password\" label=\"Nueva contraseña\" placeholder=\"Introduce la nueva contraseña\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-item *ngIf=\"hecho\">\r\n                        <ion-input [(ngModel)]=\"passwordConfident\" type=\"password\" label=\"Repite contraseña\" placeholder=\"Repite la nueva contraseña\"></ion-input>\r\n                    </ion-item>\r\n\r\n\r\n                    <ion-button *ngIf=\"!hecho\" (click)=\"sendEmail()\" expand=\"block\">Enviar codigo de recupreción</ion-button>\r\n                    <ion-button *ngIf=\"hecho\" (click)=\"sendNewPassword()\" expand=\"block\">Recuperar cuenta</ion-button>\r\n\r\n\r\n                    <div class=\"subForm2\">\r\n                        <ion-text>¿Ya tienes Cuenta?<span>   </span></ion-text>\r\n                        <ion-text routerLink=\"/login\"><b>Inicia Sesión</b></ion-text>\r\n                    </div>\r\n                </div>\r\n            </ion-col>\r\n\r\n        </ion-row>\r\n    </ion-grid>\r\n</ion-content>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQM,IAAO,8BAAP,MAAO,4BAA0B;EAErC,YAAoB,MAAgB;AAAhB,SAAA,OAAA;AADV,SAAA,UAAU;EACoB;EAEtC,UAAU,OAAa;AACnB,WAAO,KAAK,KAAK,KAAU,YAAY,SAAS,mCAAmC,KAAK,IAAI,IAAI;EACpG;EAEA,gBAAgB,MAAc,aAAkB;AAC5C,WAAO,KAAK,KAAK,KAAU,YAAY,SAAS,iCAAiC,IAAI,gBAAgB,WAAW,IAAI,IAAI;EAC5H;;;mCAVS,6BAA0B,mBAAA,UAAA,CAAA;AAAA;+FAA1B,6BAA0B,SAA1B,4BAA0B,WAAA,YAFzB,OAAM,CAAA;AAEd,IAAO,6BAAP;;;;;;AEQc,IAAA,yBAAA,GAAA,UAAA,EAAyB,GAAA,aAAA,EAAA;AACV,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAgF,IAAA,uBAAA,EAAY;;;;AAA5F,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;;;;;;AAGf,IAAA,yBAAA,GAAA,UAAA,EAAwB,GAAA,aAAA,EAAA;AACT,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAoF,IAAA,uBAAA,EAAY;;;;AAAhG,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,IAAA;;;;;;AAGf,IAAA,yBAAA,GAAA,UAAA,EAAwB,GAAA,aAAA,EAAA;AACT,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,UAAA,MAAA,MAAA,OAAA,WAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA4G,IAAA,uBAAA,EAAY;;;;AAAxH,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,QAAA;;;;;;AAGf,IAAA,yBAAA,GAAA,UAAA,EAAwB,GAAA,aAAA,EAAA;AACT,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,mBAAA,MAAA,MAAA,OAAA,oBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAmH,IAAA,uBAAA,EAAY;;;;AAA/H,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA;;;;;;AAIf,IAAA,yBAAA,GAAA,cAAA,EAAA;AAA2B,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,CAAW;IAAA,CAAA;AAAiB,IAAA,iBAAA,GAAA,iCAAA;AAA4B,IAAA,uBAAA;;;;;;AAC5F,IAAA,yBAAA,GAAA,cAAA,EAAA;AAA0B,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AAAiB,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA;;;ADbnG,IAAO,+BAAP,MAAO,6BAA2B;EAOpC,YAAoB,MAAyC,QAAa;AAAtD,SAAA,OAAA;AAAyC,SAAA,SAAA;AAN7D,SAAA,QAAc;AACd,SAAA,QAAgB;AAChB,SAAA,WAAiB;AACjB,SAAA,oBAA0B;AAC1B,SAAA,OAAY;EAEkE;EAE9E,WAAQ;EAAI;EAEZ,YAAS;AACL,SAAK,KAAK,UAAU,KAAK,KAAK,EAAE,UAAU;MACtC,MAAM,CAAC,SAAQ;MAEf;MACA,OAAO,CAAC,QAAO;AACX,gBAAQ,MAAM,4BAA4B,GAAG;MACjD;MACA,UAAU,MAAK;AACX,aAAK,QAAQ;MACjB;KACH;AACD,SAAK,QAAQ;EACjB;EAEA,kBAAe;AACX,SAAK,KAAK,gBAAgB,KAAK,MAAM,KAAK,QAAQ,EAAE,UAAU;MAC1D,MAAM,MAAK;AACP,gBAAQ,IAAI,MAAM;MACtB;MACA,OAAO,CAAC,QAAO;AACX,gBAAQ,MAAM,4BAA4B,GAAG;MACjD;KACH;AACD,SAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;EAEnC;;;mCArCS,8BAA2B,4BAAA,0BAAA,GAAA,4BAAA,MAAA,CAAA;AAAA;6FAA3B,8BAA2B,WAAA,CAAA,CAAA,yBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,UAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,OAAA,kCAAA,GAAA,eAAA,GAAA,CAAA,MAAA,UAAA,GAAA,CAAA,WAAA,KAAA,WAAA,MAAA,GAAA,cAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,OAAA,mBAAA,MAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,UAAA,SAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,cAAA,QAAA,GAAA,CAAA,SAAA,sBAAA,eAAA,sBAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,SAAA,0BAAA,eAAA,uBAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,QAAA,YAAA,SAAA,uBAAA,eAAA,oCAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,QAAA,YAAA,SAAA,wBAAA,eAAA,iCAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,UAAA,SAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,qCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACrBxC,IAAA,yBAAA,GAAA,eAAA,CAAA,EAAuD,GAAA,YAAA,CAAA,EAClB,GAAA,SAAA,EACpB,GAAA,WAAA,CAAA,EAEyB,GAAA,OAAA,CAAA;AAEtB,IAAA,oBAAA,GAAA,OAAA,CAAA;AACA,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,oBAAA,GAAA,eAAA;AACJ,IAAA,uBAAA,EAAM,EACJ;AAGV,IAAA,yBAAA,GAAA,WAAA,CAAA,EAAuD,GAAA,OAAA,CAAA;AAE/C,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,YAAA,CAAA,EAAyB,IAAA,kDAAA,GAAA,GAAA,YAAA,CAAA,EAID,IAAA,kDAAA,GAAA,GAAA,YAAA,CAAA,EAIA,IAAA,kDAAA,GAAA,GAAA,YAAA,CAAA,EAIA,IAAA,oDAAA,GAAA,GAAA,cAAA,EAAA,EAKwC,IAAA,oDAAA,GAAA,GAAA,cAAA,EAAA;AAIhE,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,UAAA;AACR,IAAA,iBAAA,IAAA,uBAAA;AAAkB,IAAA,oBAAA,IAAA,MAAA;AAAgB,IAAA,uBAAA;AAC5C,IAAA,yBAAA,IAAA,YAAA,EAAA,EAA8B,IAAA,GAAA;AAAG,IAAA,iBAAA,IAAA,kBAAA;AAAa,IAAA,uBAAA,EAAI,EAAW,EAC3D,EACJ,EACA,EAEJ,EACH;;;AA7BgB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,KAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA;AAKE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,KAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA;;;EDpBzB;EACA;EAAW;EAAA;EACX;EAAW;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACX;EACA;AAAU,GAAA,QAAA,CAAA,u2FAAA,EAAA,CAAA;AAGZ,IAAO,8BAAP;;6EAAO,6BAA2B,EAAA,WAAA,+BAAA,UAAA,uEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
