{
  "version": 3,
  "sources": ["src/app/Screen/rafaparaelchat/rafaparaelchat.component.ts", "src/app/Screen/rafaparaelchat/rafaparaelchat.component.html"],
  "sourcesContent": ["import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {WebsocketService} from '../../Service/websocket.service';\r\nimport {ChatMessage} from '../../Models/ChatMessage';\r\nimport {DatePipe, Location, NgClass, NgForOf, NgIf} from \"@angular/common\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AuthService} from '../../Service/auth.service';\r\nimport {ProfileMessenger} from \"../../Models/Profile\";\r\nimport {ProfileService} from \"../../Service/profile.service\";\r\nimport {IonicModule} from \"@ionic/angular\";\r\nimport {addIcons} from \"ionicons\";\r\nimport {arrowBackOutline, send, searchOutline, closeOutline, arrowDownOutline} from \"ionicons/icons\";\r\nimport {CloudinaryService} from \"../../Service/Cloudinary.service\";\r\n\r\n@Component({\r\n    selector: 'app-chat',\r\n    templateUrl: './rafaparaelchat.component.html',\r\n    styleUrls: ['./rafaparaelchat.component.scss'],\r\n    imports: [\r\n        DatePipe,\r\n        FormsModule,\r\n        NgForOf,\r\n        IonicModule,\r\n        NgClass,\r\n        NgIf\r\n    ],\r\n    standalone: true\r\n})\r\nexport class RafaparaelchatComponent implements OnInit, OnDestroy {\r\n    @ViewChild('chatMessages') private chatMessagesContainer!: ElementRef;\r\n    messages: ChatMessage[] = [];\r\n    newMessage: string = '';\r\n    senderNickname: string = '';\r\n    groupId!: number;\r\n    user?: ProfileMessenger;\r\n    groupName: string = '';  // Variable para almacenar el nombre del grupo\r\n    groupPhotoUrl: string = '';  // Variable para almacenar la URL de la foto del grupo\r\n    searchTerm: string = '';  // Variable para almacenar el término de búsqueda\r\n    searchIndex: number = 0;\r\n    showSearchBar: boolean = false;\r\n    followConversation: boolean = true;\r\n    isIconBlue: boolean = false;\r\n\r\n\r\n    constructor(\r\n        private websocketService: WebsocketService,\r\n        private route: ActivatedRoute,\r\n        private authService: AuthService,\r\n        private profileService: ProfileService,\r\n        private location: Location,\r\n        private cloudinaryService: CloudinaryService,\r\n    ) {\r\n        addIcons({ arrowBackOutline, send, searchOutline, closeOutline, arrowDownOutline });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Obtener el groupId de la URL\r\n        this.route.paramMap.subscribe(params => {\r\n            const groupIdParam = params.get('groupId');\r\n            if (groupIdParam) {\r\n                this.groupId = +groupIdParam;\r\n                this.websocketService.connect(this.groupId.toString());\r\n\r\n                // Llamar al servicio para obtener los mensajes del grupo\r\n                this.websocketService.getMessagesByGroup(this.groupId).subscribe({\r\n                    next: (messages: ChatMessage[]) => {\r\n                        console.log(\"Mensajes recibidos:\", messages);\r\n                        this.messages = messages;  // Cargar los mensajes en la variable\r\n                    },\r\n                    error: (error) => {\r\n                        console.error('Error obteniendo mensajes del grupo:', error);\r\n                    }\r\n                });\r\n\r\n                // Llamar al servicio para obtener la información del grupo\r\n                this.websocketService.getGroupDetails(this.groupId).subscribe({\r\n                    next: (groupInfo) => {\r\n                        console.log('Información del grupo:', groupInfo);\r\n                        this.groupName = groupInfo.name;  // Asignar el nombre del grupo\r\n                        this.groupPhotoUrl = this.cloudinaryService.getImage(groupInfo.image).toURL();\r\n                    },\r\n                    error: (error) => {\r\n                        console.error('Error obteniendo la información del grupo:', error);\r\n                    }\r\n                });\r\n            } else {\r\n                console.error('No se encontró el groupId en la URL.');\r\n            }\r\n        });\r\n\r\n        // Obtener el perfil del usuario\r\n        const token = sessionStorage.getItem('token');\r\n        if (token) {\r\n            this.profileService.getProfile(token).subscribe({\r\n                next: (profile: ProfileMessenger) => {\r\n                    this.user = profile;\r\n                    this.senderNickname = profile.nickName;\r\n                },\r\n                error: (error) => {\r\n                    console.error('Error obteniendo el perfil del usuario:', error);\r\n                }\r\n            });\r\n        } else {\r\n            console.error('Token no encontrado en sessionStorage.');\r\n        }\r\n\r\n        // Suscribirse a los mensajes entrantes\r\n        this.websocketService.getMessageObservable().subscribe({\r\n            next: (messages: ChatMessage[]) => {\r\n                this.messages = [...this.messages, ...messages];  // Agregar los nuevos mensajes\r\n                if (this.followConversation) {\r\n                    this.scrollToBottom();\r\n                }\r\n            },\r\n            error: (error) => {\r\n                console.error('Error en la recepción de mensajes:', error);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Enviar un mensaje\r\n    sendMessage() {\r\n        if (!this.newMessage.trim() || !this.user) {\r\n            console.error('Mensaje vacío o usuario no encontrado.');\r\n            return;\r\n        }\r\n\r\n        const chatMessage: ChatMessage = {\r\n            sender: this.user.nickName,\r\n            userId: this.user.id,\r\n            content: this.newMessage.trim(),\r\n            timestamp: Date.now(),\r\n            groupId: this.groupId,\r\n        };\r\n\r\n        this.websocketService.sendMessage(chatMessage);\r\n        this.newMessage = '';  // Limpiar el campo de texto\r\n        if (this.followConversation) {\r\n            this.scrollToBottom();\r\n        }\r\n    }\r\n\r\n    // Desconectar del WebSocket cuando se destruye el componente\r\n    ngOnDestroy() {\r\n        this.websocketService.disconnect();\r\n    }\r\n\r\n    navigateBack() {\r\n        window.history.back();\r\n        setTimeout(() => location.reload(), 100);\r\n    }\r\n    onSearchInput(event: any) {\r\n        if (event.key === 'Enter') {\r\n            this.searchMessages();\r\n        }\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchTerm = '';\r\n        this.searchIndex = 0;\r\n    }\r\n    toggleSearchBar() {\r\n        this.showSearchBar = !this.showSearchBar;\r\n    }\r\n    searchMessages() {\r\n        if (!this.searchTerm.trim()) {\r\n            console.error('Término de búsqueda vacío.');\r\n            return;\r\n        }\r\n\r\n        // Convertimos ambos a minúsculas para hacer la búsqueda insensible a mayúsculas/minúsculas\r\n        const term = this.searchTerm.trim().toLowerCase();\r\n\r\n        const searchResults = this.messages.filter(message => message.content.toLowerCase().includes(term));\r\n\r\n        if (searchResults.length > 0) {\r\n            const selectedMessage = searchResults[this.searchIndex];\r\n\r\n            // Buscar el mensaje en el DOM con el timestamp correspondiente\r\n            const messageElement = document.querySelector(`[data-message-id=\"${selectedMessage.timestamp}\"]`);\r\n\r\n            if (messageElement) {\r\n                messageElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n                messageElement.classList.add('highlight'); // Añadir clase para resaltar el mensaje\r\n\r\n                // Remover la clase después de 2 segundos para no dejarlo permanentemente resaltado\r\n                setTimeout(() => messageElement.classList.remove('highlight'), 2000);\r\n\r\n                // Avanzar al siguiente resultado en la lista\r\n                this.searchIndex = (this.searchIndex + 1) % searchResults.length;\r\n            } else {\r\n                console.error('No se pudo encontrar el mensaje en el DOM.');\r\n            }\r\n        } else {\r\n            console.error('No se encontraron mensajes con el término de búsqueda.');\r\n        }\r\n    }\r\n    toggleFollowConversation() {\r\n        this.followConversation = !this.followConversation;\r\n        this.isIconBlue = !this.isIconBlue;\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if (this.chatMessagesContainer) {\r\n            this.chatMessagesContainer.nativeElement.scrollTop = this.chatMessagesContainer.nativeElement.scrollHeight;\r\n        }\r\n    }\r\n}\r\n", "<div class=\"chat-container\">\r\n    <!-- Encabezado del chat -->\r\n    <div class=\"chat-header movil\">\r\n        <div class=\"icon-back\" (click)=\"navigateBack()\">\r\n            <ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n        </div>\r\n        <div class=\"chat-avatar\">\r\n            <ion-avatar>\r\n                <img [src]=\"groupPhotoUrl\" alt=\"Grupo Foto\"/>\r\n            </ion-avatar>\r\n        </div>\r\n        <div class=\"chat-user-info\">\r\n            <h4>{{ groupName }}</h4>\r\n            <p>En línea</p>\r\n\r\n        </div>\r\n\r\n        <div class=\"search-container\">\r\n            <ion-icon name=\"arrow-down-outline\" [ngClass]=\"{'icon-blue': isIconBlue}\" (click)=\"toggleFollowConversation()\"></ion-icon>\r\n            <ion-icon *ngIf=\"!showSearchBar\" name=\"search-outline\" (click)=\"toggleSearchBar()\"></ion-icon>\r\n            <div *ngIf=\"showSearchBar\" class=\"search-bar-wrapper\">\r\n                <ion-searchbar [(ngModel)]=\"searchTerm\" (ionInput)=\"onSearchInput($event)\" (keyup.enter)=\"searchMessages()\"></ion-searchbar>\r\n                <ion-icon name=\"close-outline\" (click)=\"toggleSearchBar()\"></ion-icon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Mensajes -->\r\n    <div class=\"chat-messages\" #chatMessages>\r\n        <div class=\"message-list\">\r\n            <div *ngFor=\"let message of messages\"\r\n                 [ngClass]=\"{'message-sent': message.sender === user?.nickName, 'message-received': message.sender !== user?.nickName}\"\r\n                 class=\"message-container\"\r\n                [attr.data-message-id]=\"message.timestamp\">\r\n                <!-- Nombre del usuario encima del mensaje -->\r\n                <div class=\"message-sender\">{{ message.sender }}</div>\r\n\r\n                <!-- Contenido del mensaje -->\r\n                <div class=\"message\">\r\n                    {{ message.content }}\r\n                    <span class=\"timestamp\">{{ message.timestamp | date: 'shortTime' }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Input de texto -->\r\n    <div class=\"chat-input-row\">\r\n        <input [(ngModel)]=\"newMessage\" placeholder=\"Escriba un mensaje...\" (keyup.enter)=\"sendMessage()\"/>\r\n        <button (click)=\"sendMessage()\">\r\n            <div class=\"svg-wrapper-1\">\r\n                <div class=\"svg-wrapper\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                    >\r\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z\"\r\n                        ></path>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <span>Send</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["location"]
}
