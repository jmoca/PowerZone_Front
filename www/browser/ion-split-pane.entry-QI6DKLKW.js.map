{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as Host, i as getElement } from './index-28849c61.js';\nimport { b as getIonMode } from './ionic-global-c81d82ab.js';\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none;box-shadow:none;overflow:hidden;z-index:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));--side-min-width:270px;--side-max-width:28%}\";\nconst IonSplitPaneIosStyle0 = splitPaneIosCss;\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none;box-shadow:none;overflow:hidden;z-index:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));--side-min-width:270px;--side-max-width:28%}\";\nconst IonSplitPaneMdStyle0 = splitPaneMdCss;\n\n// TODO(FW-2832): types\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  xs: '(min-width: 0px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  never: ''\n};\nconst SplitPane = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    this.contentId = undefined;\n    this.disabled = false;\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    this.ionSplitPaneVisible.emit({\n      visible\n    });\n  }\n  /**\n   * @internal\n   */\n  async isVisible() {\n    return Promise.resolve(this.visible);\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined' && customElements != null) {\n      await customElements.whenDefined('ion-split-pane');\n    }\n    this.styleMainElement();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    // Listen on media query\n    const callback = q => {\n      this.visible = q.matches;\n    };\n    const mediaList = window.matchMedia(mediaQuery);\n    // TODO FW-5869\n    mediaList.addListener(callback);\n    this.rmL = () => mediaList.removeListener(callback);\n    this.visible = mediaList.matches;\n  }\n  /**\n   * Attempt to find the main content\n   * element inside of the split pane.\n   * If found, set it as the main node.\n   *\n   * We assume that the main node\n   * is available in the DOM on split\n   * pane load.\n   */\n  styleMainElement() {\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        } else {\n          setPaneClass(child, isMain);\n          foundMain = true;\n        }\n      }\n    }\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      key: '1ca0b0299d03605bb358112ca56cbafbe58f00f5',\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      }\n    }, h(\"slot\", {\n      key: 'abe231361727ae7fc63edd592a4490caac1909fb'\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"visible\": [\"visibleChanged\"],\n      \"disabled\": [\"updateState\"],\n      \"when\": [\"updateState\"]\n    };\n  }\n};\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nSplitPane.style = {\n  ios: IonSplitPaneIosStyle0,\n  md: IonSplitPaneMdStyle0\n};\nexport { SplitPane as ion_split_pane };"],"mappings":"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","names":[],"x_google_ignoreList":[0]}