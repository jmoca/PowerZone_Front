{
  "version": 3,
  "sources": ["src/app/Models/Login.ts", "src/app/Screen/login/login.component.ts", "src/app/Screen/login/login.component.html"],
  "sourcesContent": ["\r\nexport class Login{\r\n    email?: string;\r\n    password?: string;\r\n}\r\n", "import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\r\nimport {\r\n    IonButton,\r\n    IonCol,\r\n    IonContent,\r\n    IonGrid,\r\n    IonImg,\r\n    IonInput,\r\n    IonInputPasswordToggle,\r\n    IonItem,\r\n    IonRow,\r\n    IonText\r\n} from '@ionic/angular/standalone';\r\nimport {ActivatedRoute, Router, RouterLink} from '@angular/router';\r\nimport {AlertController} from '@ionic/angular';\r\nimport {Login} from '../../Models/Login';\r\nimport {RegistroService} from '../../Service/profile.service';\r\nimport {CarrouselComponent} from '../../Component/carrousel/carrousel.component';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        CarrouselComponent,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        IonButton,\r\n        IonCol,\r\n        IonContent,\r\n        IonGrid,\r\n        IonImg,\r\n        IonInput,\r\n        IonInputPasswordToggle,\r\n        IonItem,\r\n        IonRow,\r\n        IonText,\r\n        RouterLink\r\n    ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    // Declaramos el FormGroup para el login\r\n    loginForm: FormGroup;\r\n    // Modelo de login que se actualizará con los datos del formulario\r\n    login: Login = new Login();\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private authService: RegistroService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private alertController: AlertController\r\n    ) {\r\n        // Se crea el formGroup con validadores:\r\n        // - Email: requerido y debe tener formato de correo\r\n        // - Password: requerido\r\n        this.loginForm = this.fb.group({\r\n            email: [this.login.email, [Validators.required, Validators.email]],\r\n            password: [this.login.password, Validators.required]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    async showAlert(message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: 'Error',\r\n            message: message,\r\n            buttons: ['OK']\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.loginForm.invalid) {\r\n            this.markFormTouched();\r\n            this.showAlert('Para acceder se necesitan rellenar los campos correctamente.');\r\n            return;\r\n        }\r\n\r\n        // Combina los datos actuales del modelo con los valores del formulario\r\n        this.login = { ...this.login, ...this.loginForm.value };\r\n        this.authService.login(this.login).subscribe(\r\n            (response: any) => {\r\n                const token = response.token;\r\n                if (token) {\r\n                    this.authService.isBanned(token).subscribe({\r\n                        next: (response) => {\r\n                            if (response == true) {\r\n                                this.showAlert('Login fallido: Usuario baneado');\r\n                            } else {\r\n                                sessionStorage.setItem('token', token);\r\n                                console.log('Navigating to /posts');\r\n                                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/posts';\r\n                                this.router.navigateByUrl(returnUrl);\r\n                            }\r\n                        },\r\n                        error: (error: any) => {\r\n                            console.error('Error checking ban status', error);\r\n                            this.showAlert('Error checking ban status');\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.showAlert('Login fallido: Datos inválidos');\r\n                }\r\n            },\r\n            (error: any) => {\r\n                console.error('Login fallido', error);\r\n                this.showAlert('Login fallido: Datos inválidos');\r\n            }\r\n        );\r\n    }\r\n\r\n    // Función para marcar todos los controles del formulario como \"touched\"\r\n    markFormTouched() {\r\n        Object.values(this.loginForm.controls).forEach(control => {\r\n            control.markAsTouched();\r\n        });\r\n    }\r\n}\r\n", "<ion-content class=\"Registrobody\" style=\"height: 100%\">\r\n  <ion-grid class=\"ion-no-padding\">\r\n    <ion-row>\r\n      <!--En esta columna es donde va la foto de los moviles-->\r\n      <ion-col class=\"Registrobody\" size-lg=\"6\">\r\n        <div id=\"onichan\">\r\n          <img src=\"../../../assets/img/marco2.png\" class=\"overlay-image\">\r\n          <div id=\"onichan2\">\r\n            <app-carrousel></app-carrousel>\r\n          </div>\r\n        </div>\r\n      </ion-col>\r\n      <!--En este es donde está el formulario de registro-->\r\n        <ion-col size-lg=\"6\" size-xs=\"12\" class=\"Registrobody\">\r\n            <div class=\"subForm\">\r\n                <ion-img src=\"assets/logo.png\" id=\"logo\"></ion-img>\r\n                <!-- Se utiliza Reactive Forms en lugar de ngModel -->\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <ion-item>\r\n                        <ion-input formControlName=\"email\" label=\"Correo\" placeholder=\"Ingrese su correo\"></ion-input>\r\n                    </ion-item>\r\n                    <ion-item>\r\n                        <ion-input formControlName=\"password\" type=\"password\" label=\"Contraseña\" placeholder=\"Ingrese su contraseña\">\r\n                            <ion-input-password-toggle slot=\"end\"></ion-input-password-toggle>\r\n                        </ion-input>\r\n                    </ion-item>\r\n                    <ion-button type=\"submit\" expand=\"block\">Iniciar Sesión</ion-button>\r\n                </form>\r\n                <div class=\"subForm2\">\r\n                    <ion-text>¿No tienes Cuenta?<span>   </span></ion-text>\r\n                    <ion-text routerLink=\"/registro\"><b>Regístrate</b></ion-text>\r\n                </div>\r\n                <div class=\"subForm3\">\r\n                    <ion-text>¿Has olvidado tu contraseña?<span>   </span></ion-text>\r\n                    <ion-text routerLink=\"/recu\"><b>Recuperar Cuenta</b></ion-text>\r\n                </div>\r\n            </div>\r\n        </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n"],
  "mappings": "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",
  "names": ["response"]
}
